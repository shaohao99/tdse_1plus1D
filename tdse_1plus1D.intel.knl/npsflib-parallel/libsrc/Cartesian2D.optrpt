Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: Tridag_Fast(const std::complex<double> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, const std::complex<double> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (Tridag_Fast(const std::complex<double> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, const std::complex<double> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &)) ../include/utils.h(68,1)

===========================================================================

Begin optimization report for: __$U0

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__$U0) [5] <compiler generated>
  -> INLINE: (*,*) std::complex<double>::complex(std::complex<double> *, double, double)

===========================================================================

Begin optimization report for: __$U1

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__$U1) [6] <compiler generated>
  -> INLINE: (*,*) std::complex<double>::complex(std::complex<double> *, double, double)

===========================================================================

Begin optimization report for: __$U2

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__$U2) [7] <compiler generated>
  -> INLINE: (*,*) std::complex<double>::complex(std::complex<double> *, double, double)

===========================================================================

Begin optimization report for: __$U3

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__$U3) [8] <compiler generated>
  -> INLINE: (*,*) std::complex<double>::complex(std::complex<double> *, double, double)

===========================================================================

Begin optimization report for: __$U4

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__$U4) [9] <compiler generated>
  -> INLINE: (*,*) std::complex<double>::complex(std::complex<double> *, double, double)

===========================================================================

Begin optimization report for: __$U5

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__$U5) [10] <compiler generated>
  -> INLINE: (*,*) std::complex<double>::complex(std::complex<double> *, double, double)

===========================================================================

Begin optimization report for: __$U6

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__$U6) [11] <compiler generated>
  -> INLINE: (*,*) std::complex<double>::complex(std::complex<double> *, double, double)

===========================================================================

Begin optimization report for: __$U7

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__$U7) [12] <compiler generated>
  -> INLINE: (*,*) std::complex<double>::complex(std::complex<double> *, double, double)

===========================================================================

Begin optimization report for: wavefunction::in2(const wavefunction *, int, int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (wavefunction::in2(const wavefunction *, int, int) const) ../include/wavefunction.h(271,3)

===========================================================================

Begin optimization report for: Cartesian_2D::temp_data_t::temp_data_t(Cartesian_2D::temp_data_t *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (Cartesian_2D::temp_data_t::temp_data_t(Cartesian_2D::temp_data_t *)) ../include/Cartesian2D.h(17,8)

===========================================================================

Begin optimization report for: Cartesian_2D::Hamiltonian::Hamiltonian(Cartesian_2D::Hamiltonian *, const wavefunction &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Hamiltonian::Hamiltonian(Cartesian_2D::Hamiltonian *, const wavefunction &)) [167] Cartesian2D.cpp(18,50)
  -> (18,14) Cartesian_2D::temp_data_t::~temp_data_t(Cartesian_2D::temp_data_t *)
  -> (18,14) Cartesian_2D::temp_data_t::~temp_data_t(Cartesian_2D::temp_data_t *)
  -> INLINE: (18,14) Cartesian_2D::temp_data_t::temp_data_t(Cartesian_2D::temp_data_t *)
    -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
    -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
    -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
    -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
    -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
    -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
    -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
    -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
    -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
    -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
    -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
    -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
    -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
    -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
    -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> INLINE: (35,11) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::resize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (35,35) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (36,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::resize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (36,42) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (37,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::resize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (37,42) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (38,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::resize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (38,42) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (39,12) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::resize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (39,36) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (40,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::resize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (40,37) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (41,23) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::resize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (41,47) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (42,22) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::resize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (42,46) std::complex<double>::complex(std::complex<double> *, double, double)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(18,14)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 17 and  line 17
   remark #25436: completely unrolled by 4  
LOOP END

LOOP BEGIN at Cartesian2D.cpp(23,3)
<Distributed chunk1>
   remark #25426: Loop Distributed (2 way) 
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at Cartesian2D.cpp(23,3)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at Cartesian2D.cpp(31,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(35,11)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(35,11)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(545,4) inlined into Cartesian2D.cpp(35,11)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 546 and  line 546
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(545,4) inlined into Cartesian2D.cpp(35,11)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(690,7) inlined into Cartesian2D.cpp(35,11)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 690 and  line 691
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(690,7) inlined into Cartesian2D.cpp(35,11)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into Cartesian2D.cpp(35,11)
   <Peeled loop for vectorization>
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into Cartesian2D.cpp(35,11)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into Cartesian2D.cpp(35,11)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(35,11)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(35,11)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(690,7) inlined into Cartesian2D.cpp(35,11)
   <Peeled loop for vectorization>
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(690,7) inlined into Cartesian2D.cpp(35,11)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(690,7) inlined into Cartesian2D.cpp(35,11)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into Cartesian2D.cpp(35,11)
   <Peeled loop for vectorization>
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into Cartesian2D.cpp(35,11)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into Cartesian2D.cpp(35,11)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(35,11)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(35,11)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(35,11)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(35,11)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at Cartesian2D.cpp(18,14)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::complex<double>, std::allocator<std::complex<double>>>::_M_fill_insert(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::iterator, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(386,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(386,5)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(545,4) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(391,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 546 and  line 546
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(545,4) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(391,5)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(690,7) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(393,5)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.4.7/bits/stl_algobase.h(691,3) ]
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(690,7) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(393,5)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(398,5)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.4.7/bits/stl_construct.h(80,7) ]
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(398,5)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(403,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(403,5)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(690,7) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(407,5)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.4.7/bits/stl_algobase.h(691,3) ]
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(690,7) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(407,5)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(420,5)
<Peeled loop for vectorization>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(420,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(420,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(426,7)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(426,7)
<Remainder>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(433,7)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(433,7)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(433,7)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.4.7/bits/vector.tcc(380,30):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (8, 0)
/usr/include/c++/4.4.7/bits/stl_algobase.h(691,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.4.7/bits/stl_algobase.h(691,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.4.7/bits/stl_algobase.h(691,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.4.7/bits/stl_construct.h(80,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.4.7/bits/stl_construct.h(80,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.4.7/bits/stl_construct.h(80,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.4.7/bits/stl_algobase.h(691,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.4.7/bits/stl_algobase.h(691,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.4.7/bits/stl_algobase.h(691,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
===========================================================================

Begin optimization report for: Cartesian_2D::temp_data_t::~temp_data_t(Cartesian_2D::temp_data_t *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::temp_data_t::~temp_data_t(Cartesian_2D::temp_data_t *)) [174] ../include/Cartesian2D.h(17,8)
  -> (17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> INLINE: (17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> (17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> (17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> INLINE: (17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> (17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> (17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> INLINE: (17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}

===========================================================================

Begin optimization report for: Cartesian_2D::Hamiltonian::Hamiltonian(Cartesian_2D::Hamiltonian *const, const wavefunction &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Hamiltonian::Hamiltonian(Cartesian_2D::Hamiltonian *const, const wavefunction &)) [175] Cartesian2D.cpp(18,14)
  -> INLINE: (18,14) Cartesian_2D::Hamiltonian::Hamiltonian(Cartesian_2D::Hamiltonian *, const wavefunction &)
    -> INLINE: (18,14) Cartesian_2D::temp_data_t::temp_data_t(Cartesian_2D::temp_data_t *)
      -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
      -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
      -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
      -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
      -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
      -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
      -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
      -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
      -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
      -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
      -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
      -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
      -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
      -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
      -> ../include/Cartesian2D.h:(17,8) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
    -> (18,14) Cartesian_2D::temp_data_t::~temp_data_t(Cartesian_2D::temp_data_t *)
    -> (18,14) Cartesian_2D::temp_data_t::~temp_data_t(Cartesian_2D::temp_data_t *)
    -> INLINE: (35,11) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::resize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (35,35) std::complex<double>::complex(std::complex<double> *, double, double)
    -> INLINE: (36,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::resize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (36,42) std::complex<double>::complex(std::complex<double> *, double, double)
    -> INLINE: (37,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::resize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (37,42) std::complex<double>::complex(std::complex<double> *, double, double)
    -> INLINE: (38,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::resize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (38,42) std::complex<double>::complex(std::complex<double> *, double, double)
    -> INLINE: (39,12) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::resize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (39,36) std::complex<double>::complex(std::complex<double> *, double, double)
    -> INLINE: (40,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::resize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (40,37) std::complex<double>::complex(std::complex<double> *, double, double)
    -> INLINE: (41,23) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::resize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (41,47) std::complex<double>::complex(std::complex<double> *, double, double)
    -> INLINE: (42,22) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::resize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (42,46) std::complex<double>::complex(std::complex<double> *, double, double)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(18,14) inlined into Cartesian2D.cpp(18,14)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 17 and  line 17
   remark #25436: completely unrolled by 4  
LOOP END

LOOP BEGIN at Cartesian2D.cpp(23,3) inlined into Cartesian2D.cpp(18,14)
<Distributed chunk1>
   remark #25426: Loop Distributed (2 way) 
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at Cartesian2D.cpp(23,3) inlined into Cartesian2D.cpp(18,14)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at Cartesian2D.cpp(31,3) inlined into Cartesian2D.cpp(18,14)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(18,14)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(18,14)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(545,4) inlined into Cartesian2D.cpp(18,14)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 546 and  line 546
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(545,4) inlined into Cartesian2D.cpp(18,14)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(690,7) inlined into Cartesian2D.cpp(18,14)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 690 and  line 691
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(690,7) inlined into Cartesian2D.cpp(18,14)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into Cartesian2D.cpp(18,14)
      remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.4.7/bits/stl_construct.h(80,7) ]
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into Cartesian2D.cpp(18,14)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(18,14)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(18,14)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(690,7) inlined into Cartesian2D.cpp(18,14)
      remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.4.7/bits/stl_algobase.h(691,3) ]
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(690,7) inlined into Cartesian2D.cpp(18,14)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into Cartesian2D.cpp(18,14)
      remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.4.7/bits/stl_construct.h(80,7) ]
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into Cartesian2D.cpp(18,14)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(18,14)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(18,14)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(18,14)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(18,14)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at Cartesian2D.cpp(18,14) inlined into Cartesian2D.cpp(18,14)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.4.7/bits/stl_construct.h(80,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.4.7/bits/stl_construct.h(80,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.4.7/bits/stl_construct.h(80,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.4.7/bits/stl_construct.h(80,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.4.7/bits/stl_construct.h(80,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.4.7/bits/stl_construct.h(80,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
===========================================================================

Begin optimization report for: Cartesian_2D::Hamiltonian::X1(Cartesian_2D::Hamiltonian *, std::complex<double>, wavefunction &, const Cartesian_2D::ABVparam &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Hamiltonian::X1(Cartesian_2D::Hamiltonian *, std::complex<double>, wavefunction &, const Cartesian_2D::ABVparam &)) [176] Cartesian2D.cpp(58,3)
  -> (61,11) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> INLINE: (65,25) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (66,33) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (66,36) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (66,55) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (67,38) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (68,13) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (69,36) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (70,36) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (79,25) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (80,12) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (80,18) std::complex<double>::operator=(std::complex<double> *, double)
  -> INLINE: (80,27) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (81,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (81,28) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (89,20) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (89,31) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (89,31) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (94,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (94,31) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (94,31) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (94,37) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (96,23) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (96,30) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (96,53) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (96,53) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (96,69) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (96,69) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (96,75) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (96,90) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (96,90) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (96,90) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (96,120) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (96,120) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (96,120) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (104,20) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (104,30) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (104,36) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (104,42) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (105,25) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (105,32) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (105,55) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (105,55) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (105,69) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (105,75) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (105,81) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (105,96) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (105,96) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (105,96) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (105,125) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (105,125) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (105,125) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (110,20) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (110,33) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (110,33) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (110,39) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (110,45) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (111,25) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (111,32) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (111,55) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (111,55) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (111,72) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (111,72) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (111,78) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (111,84) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (111,99) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (111,99) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (111,99) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (111,128) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (111,128) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (111,128) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (120,7) Tridag_Fast(const std::complex<double> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, const std::complex<double> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &)
    -> INLINE: ../include/utils.h:(69,33) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size(const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *) const
    -> INLINE: ../include/utils.h:(77,37) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(78,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(78,36) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(78,42) std::operator/(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(81,10) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(81,44) std::operator/(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(82,36) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(83,11) std::complex<double>::operator-=<double>(std::complex<double> *, const std::complex<double> &)
    -> INLINE: ../include/utils.h:(83,39) std::operator*(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(83,39) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(89,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(89,46) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(89,88) std::operator-(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(89,88) std::operator*(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(89,88) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(89,102) std::operator/(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(94,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(94,27) std::complex<double>::operator-=<double>(std::complex<double> *, const std::complex<double> &)
    -> INLINE: ../include/utils.h:(94,33) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(94,55) std::operator*(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(94,55) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (127,12) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (127,17) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (127,46) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(72,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at Cartesian2D.cpp(74,8)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 2  
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(84,8)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at ../include/utils.h(79,3) inlined into Cartesian2D.cpp(120,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between  line 81 and  line 89
   LOOP END

   LOOP BEGIN at ../include/utils.h(92,3) inlined into Cartesian2D.cpp(120,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 212 and  line 212
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(125,7)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 2  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
../include/utils.h(77,37):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (8, 0)
../include/utils.h(82,36):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (8, 0)
===========================================================================

Begin optimization report for: Cartesian_2D::Hamiltonian::X2(Cartesian_2D::Hamiltonian *, std::complex<double>, wavefunction &, const Cartesian_2D::ABVparam &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Hamiltonian::X2(Cartesian_2D::Hamiltonian *, std::complex<double>, wavefunction &, const Cartesian_2D::ABVparam &)) [177] Cartesian2D.cpp(142,3)
  -> (145,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> INLINE: (149,24) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (150,30) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (150,33) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (150,52) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (151,37) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (152,12) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (153,42) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (154,42) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (162,24) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (163,11) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (163,18) std::complex<double>::operator=(std::complex<double> *, double)
  -> INLINE: (163,27) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (164,12) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (164,27) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (170,19) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (170,31) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (170,31) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (171,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (171,31) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (171,31) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (171,37) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (173,22) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (173,30) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (173,53) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (173,53) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (173,71) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (173,71) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (173,77) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (173,92) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (173,92) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (173,92) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (173,123) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (173,123) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (173,123) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (178,19) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (178,30) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (178,36) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (178,42) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (179,24) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (179,31) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (179,54) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (179,54) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (179,68) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (179,74) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (179,80) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (179,95) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (179,95) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (179,95) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (179,124) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (179,124) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (179,124) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (183,19) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (183,33) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (183,33) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (183,39) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (183,45) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (184,24) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (184,31) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (184,54) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (184,54) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (184,71) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (184,71) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (184,77) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (184,83) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (184,98) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (184,98) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (184,98) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (184,127) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (184,127) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (184,127) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (190,4) Tridag_Fast(const std::complex<double> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, const std::complex<double> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &)
    -> INLINE: ../include/utils.h:(69,33) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size(const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *) const
    -> INLINE: ../include/utils.h:(77,37) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(78,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(78,36) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(78,42) std::operator/(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(81,10) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(81,44) std::operator/(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(82,36) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(83,11) std::complex<double>::operator-=<double>(std::complex<double> *, const std::complex<double> &)
    -> INLINE: ../include/utils.h:(83,39) std::operator*(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(83,39) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(89,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(89,46) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(89,88) std::operator-(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(89,88) std::operator*(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(89,88) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(89,102) std::operator/(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(94,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(94,27) std::complex<double>::operator-=<double>(std::complex<double> *, const std::complex<double> &)
    -> INLINE: ../include/utils.h:(94,33) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(94,55) std::operator*(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(94,55) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (194,12) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (194,17) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (194,46) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(157,4)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at Cartesian2D.cpp(160,7)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 2  
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(167,7)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at ../include/utils.h(79,3) inlined into Cartesian2D.cpp(190,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between  line 81 and  line 89
   LOOP END

   LOOP BEGIN at ../include/utils.h(92,3) inlined into Cartesian2D.cpp(190,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 212 and  line 212
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(192,4)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 2  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
../include/utils.h(77,37):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (8, 0)
../include/utils.h(82,36):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (8, 0)
===========================================================================

Begin optimization report for: Cartesian_2D::Hamiltonian::X1_Laser(Cartesian_2D::Hamiltonian *, std::complex<double>, wavefunction &, const Cartesian_2D::ABVparam &, double, gauge_t)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Hamiltonian::X1_Laser(Cartesian_2D::Hamiltonian *, std::complex<double>, wavefunction &, const Cartesian_2D::ABVparam &, double, gauge_t)) [178] Cartesian2D.cpp(204,3)
  -> (207,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> INLINE: (211,24) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (212,30) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (212,33) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (212,51) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (213,36) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (213,40) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (214,12) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (215,12) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (216,12) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (217,12) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (223,25) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (224,12) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (224,19) std::complex<double>::operator=(std::complex<double> *, double)
  -> INLINE: (224,28) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (225,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (225,28) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (233,13) std::complex<double>::operator=(std::complex<double> *, double)
  -> INLINE: (235,19) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (235,30) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (235,50) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (235,50) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (235,50) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (240,23) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (241,19) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (241,28) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (241,28) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (244,33) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (245,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (245,32) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (245,32) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (245,38) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (246,33) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (248,23) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (248,31) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (248,54) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (248,54) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (248,71) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (248,71) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (248,77) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (248,92) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (248,92) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (248,92) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (248,122) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (248,122) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (248,122) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (254,20) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (254,31) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (254,37) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (254,43) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (255,25) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (255,33) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (255,56) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (255,56) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (255,70) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (255,76) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (255,82) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (255,97) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (255,97) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (255,97) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (255,127) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (255,127) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (255,127) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (260,20) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (260,34) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (260,34) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (260,40) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (260,46) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (261,25) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (261,33) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (261,56) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (261,56) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (261,73) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (261,73) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (261,79) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (261,85) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (261,100) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (261,100) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (261,100) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (261,130) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (261,130) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (261,130) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (267,5) Tridag_Fast(const std::complex<double> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, const std::complex<double> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &)
    -> INLINE: ../include/utils.h:(69,33) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size(const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *) const
    -> INLINE: ../include/utils.h:(77,37) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(78,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(78,36) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(78,42) std::operator/(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(81,10) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(81,44) std::operator/(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(82,36) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(83,11) std::complex<double>::operator-=<double>(std::complex<double> *, const std::complex<double> &)
    -> INLINE: ../include/utils.h:(83,39) std::operator*(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(83,39) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(89,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(89,46) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(89,88) std::operator-(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(89,88) std::operator*(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(89,88) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(89,102) std::operator/(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(94,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(94,27) std::complex<double>::operator-=<double>(std::complex<double> *, const std::complex<double> &)
    -> INLINE: ../include/utils.h:(94,33) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(94,55) std::operator*(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(94,55) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (272,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (272,18) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (272,51) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(219,4)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at Cartesian2D.cpp(221,5)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(228,5)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at ../include/utils.h(79,3) inlined into Cartesian2D.cpp(267,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between  line 81 and  line 89
   LOOP END

   LOOP BEGIN at ../include/utils.h(92,3) inlined into Cartesian2D.cpp(267,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 212 and  line 212
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(270,5)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
../include/utils.h(77,37):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (8, 0)
../include/utils.h(82,36):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (8, 0)
===========================================================================

Begin optimization report for: Cartesian_2D::Hamiltonian::X2_Laser(Cartesian_2D::Hamiltonian *, std::complex<double>, wavefunction &, const Cartesian_2D::ABVparam &, double, gauge_t)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Hamiltonian::X2_Laser(Cartesian_2D::Hamiltonian *, std::complex<double>, wavefunction &, const Cartesian_2D::ABVparam &, double, gauge_t)) [179] Cartesian2D.cpp(281,3)
  -> (284,11) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> INLINE: (288,25) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (289,31) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (289,34) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (289,52) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (290,37) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (290,41) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (291,13) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (292,13) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (293,13) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (294,13) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (300,26) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (301,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (301,20) std::complex<double>::operator=(std::complex<double> *, double)
  -> INLINE: (301,29) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (302,14) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (302,29) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (310,14) std::complex<double>::operator=(std::complex<double> *, double)
  -> INLINE: (312,34) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (312,45) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (312,65) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (312,65) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (312,65) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (317,24) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (318,20) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (318,29) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (318,29) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (321,34) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (322,19) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (322,33) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (322,33) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (322,39) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (323,34) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (325,24) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (325,32) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (325,55) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (325,55) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (325,72) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (325,72) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (325,78) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (325,93) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (325,93) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (325,93) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (325,123) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (325,123) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (325,123) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (330,21) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (330,32) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (330,38) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (330,44) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (331,26) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (331,34) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (331,57) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (331,57) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (331,71) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (331,77) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (331,83) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (331,98) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (331,98) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (331,98) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (331,128) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (331,128) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (331,128) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (336,21) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (336,35) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (336,35) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (336,41) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (336,47) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (337,26) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (337,34) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (337,57) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (337,57) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (337,74) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (337,74) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (337,80) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (337,86) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (337,101) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (337,101) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (337,101) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (337,131) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (337,131) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (337,131) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (343,6) Tridag_Fast(const std::complex<double> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, const std::complex<double> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &)
    -> INLINE: ../include/utils.h:(69,33) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size(const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *) const
    -> INLINE: ../include/utils.h:(77,37) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(78,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(78,36) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(78,42) std::operator/(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(81,10) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(81,44) std::operator/(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(82,36) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(83,11) std::complex<double>::operator-=<double>(std::complex<double> *, const std::complex<double> &)
    -> INLINE: ../include/utils.h:(83,39) std::operator*(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(83,39) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(89,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(89,46) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(89,88) std::operator-(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(89,88) std::operator*(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(89,88) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(89,102) std::operator/(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(94,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(94,27) std::complex<double>::operator-=<double>(std::complex<double> *, const std::complex<double> &)
    -> INLINE: ../include/utils.h:(94,33) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(94,55) std::operator*(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(94,55) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (348,14) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (348,19) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (348,53) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(296,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at Cartesian2D.cpp(298,6)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 2  
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(305,6)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at ../include/utils.h(79,3) inlined into Cartesian2D.cpp(343,6)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between  line 81 and  line 89
   LOOP END

   LOOP BEGIN at ../include/utils.h(92,3) inlined into Cartesian2D.cpp(343,6)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 212 and  line 212
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(346,6)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 2  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
../include/utils.h(77,37):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (8, 0)
../include/utils.h(82,36):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (8, 0)
===========================================================================

Begin optimization report for: Cartesian_2D::Hamiltonian::X1_Laser_OMP(Cartesian_2D::Hamiltonian *, std::complex<double>, wavefunction &, const Cartesian_2D::ABVparam &, double, gauge_t)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Hamiltonian::X1_Laser_OMP(Cartesian_2D::Hamiltonian *, std::complex<double>, wavefunction &, const Cartesian_2D::ABVparam &, double, gauge_t)) [180] Cartesian2D.cpp(356,3)
  -> INLINE: (358,24) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (359,30) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (359,33) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (359,51) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (360,36) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (360,40) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (361,12) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (362,12) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (363,12) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (364,12) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (379,21) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (379,32) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (379,32) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (379,32) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (379,32) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (379,32) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> DELETED: (379,36) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (379,48) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (379,48) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (379,48) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (379,48) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (379,48) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> INLINE: (382,25) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (383,10) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (383,18) std::complex<double>::operator=(std::complex<double> *, double)
  -> INLINE: (383,27) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (384,11) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (384,27) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> DELETED: (387,35) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (387,52) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (387,52) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (387,52) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (387,52) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (387,52) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> DELETED: (387,57) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (387,79) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (387,79) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (387,79) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (387,79) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (387,79) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> INLINE: (393,13) std::complex<double>::operator=(std::complex<double> *, double)
  -> INLINE: (395,19) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (395,30) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (395,49) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (395,49) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (395,49) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (400,23) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (401,19) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (401,26) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (401,26) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (404,33) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (405,16) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (405,31) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (405,31) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (405,37) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (406,33) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (408,21) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (408,30) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (408,51) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (408,51) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (408,69) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (408,69) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (408,75) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (408,88) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (408,88) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (408,88) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (408,117) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (408,117) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (408,117) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (414,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (414,30) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (414,36) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (414,42) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (415,23) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (415,32) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (415,53) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (415,53) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (415,68) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (415,74) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (415,80) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (415,93) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (415,93) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (415,93) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (415,122) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (415,122) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (415,122) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (420,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (420,33) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (420,33) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (420,39) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (420,45) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (421,23) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (421,32) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (421,53) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (421,53) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (421,71) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (421,71) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (421,77) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (421,83) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (421,96) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (421,96) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (421,96) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (421,125) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (421,125) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (421,125) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> DELETED: (427,32) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (427,53) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (427,53) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (427,53) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (427,53) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (427,53) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> DELETED: (427,57) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (427,67) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (427,67) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (427,67) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (427,67) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (427,67) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> INLINE: (428,5) Tridag_Fast(const std::complex<double> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, const std::complex<double> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &)
    -> INLINE: ../include/utils.h:(69,33) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size(const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *) const
    -> INLINE: ../include/utils.h:(77,37) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(78,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(78,36) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(78,42) std::operator/(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(81,10) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(81,44) std::operator/(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(82,36) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(83,11) std::complex<double>::operator-=<double>(std::complex<double> *, const std::complex<double> &)
    -> INLINE: ../include/utils.h:(83,39) std::operator*(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(83,39) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(89,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(89,46) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(89,88) std::operator-(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(89,88) std::operator*(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(89,88) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(89,102) std::operator/(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(94,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(94,27) std::complex<double>::operator-=<double>(std::complex<double> *, const std::complex<double> &)
    -> INLINE: ../include/utils.h:(94,33) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(94,55) std::operator*(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(94,55) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (433,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (433,18) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (433,50) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (436,4) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (436,4) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (436,4) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (436,4) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (436,4) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (436,4) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: OpenMP optimizations [openmp]

Cartesian2D.cpp(369:1-369:1):OMP:_ZN12Cartesian_2D11Hamiltonian12X1_Laser_OMPESt7complexIdER12wavefunctionRKNS_8ABVparamEd7gauge_t:  OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(374,4)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at Cartesian2D.cpp(380,5)
      remark #15523: loop was not vectorized: loop control variable i1 was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(388,5)
      remark #15523: loop was not vectorized: loop control variable i2 was found, but loop iteration count cannot be computed before executing the loop
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at ../include/utils.h(79,3) inlined into Cartesian2D.cpp(428,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 81 and  line 212
   LOOP END

   LOOP BEGIN at ../include/utils.h(92,3) inlined into Cartesian2D.cpp(428,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 212 and  line 212
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(431,5)
      remark #15523: loop was not vectorized: loop control variable i3 was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
../include/utils.h(77,37):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (8, 0)
../include/utils.h(82,36):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (8, 0)
===========================================================================

Begin optimization report for: Cartesian_2D::Hamiltonian::X2_Laser_OMP(Cartesian_2D::Hamiltonian *, std::complex<double>, wavefunction &, const Cartesian_2D::ABVparam &, double, gauge_t)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Hamiltonian::X2_Laser_OMP(Cartesian_2D::Hamiltonian *, std::complex<double>, wavefunction &, const Cartesian_2D::ABVparam &, double, gauge_t)) [182] Cartesian2D.cpp(444,3)
  -> INLINE: (446,25) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (447,31) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (447,34) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (447,52) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (448,37) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (448,41) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (449,13) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (450,13) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (451,13) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (452,13) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (467,22) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (467,33) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (467,33) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (467,33) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (467,33) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (467,33) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> DELETED: (467,37) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (467,49) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (467,49) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (467,49) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (467,49) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (467,49) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> INLINE: (470,26) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (471,11) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (471,19) std::complex<double>::operator=(std::complex<double> *, double)
  -> INLINE: (471,28) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (472,12) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (472,28) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> DELETED: (475,29) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (475,46) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (475,46) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (475,46) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (475,46) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (475,46) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> DELETED: (475,51) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (475,73) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (475,73) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (475,73) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (475,73) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (475,73) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> INLINE: (481,14) std::complex<double>::operator=(std::complex<double> *, double)
  -> INLINE: (483,34) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (483,45) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (483,64) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (483,64) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (483,64) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (488,24) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (489,20) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (489,27) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (489,27) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (492,34) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (493,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (493,32) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (493,32) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (493,38) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (494,34) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (496,22) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (496,31) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (496,52) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (496,52) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (496,70) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (496,70) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (496,76) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (496,89) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (496,89) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (496,89) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (496,118) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (496,118) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (496,118) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (501,19) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (501,31) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (501,37) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (501,43) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (502,24) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (502,33) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (502,54) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (502,54) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (502,69) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (502,75) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (502,81) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (502,94) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (502,94) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (502,94) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (502,123) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (502,123) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (502,123) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (507,19) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (507,34) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (507,34) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (507,40) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (507,46) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (508,24) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (508,33) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (508,54) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (508,54) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (508,72) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (508,72) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (508,78) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (508,84) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (508,97) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (508,97) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (508,97) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (508,126) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (508,126) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (508,126) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> DELETED: (514,29) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (514,50) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (514,50) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (514,50) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (514,50) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (514,50) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> DELETED: (514,54) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (514,64) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (514,64) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (514,64) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (514,64) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (514,64) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> INLINE: (515,6) Tridag_Fast(const std::complex<double> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, const std::complex<double> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &)
    -> INLINE: ../include/utils.h:(69,33) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size(const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *) const
    -> INLINE: ../include/utils.h:(77,37) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(78,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(78,36) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(78,42) std::operator/(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(81,10) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(81,44) std::operator/(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(82,36) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(83,11) std::complex<double>::operator-=<double>(std::complex<double> *, const std::complex<double> &)
    -> INLINE: ../include/utils.h:(83,39) std::operator*(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(83,39) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(89,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(89,46) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(89,88) std::operator-(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(89,88) std::operator*(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(89,88) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(89,102) std::operator/(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(94,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(94,27) std::complex<double>::operator-=<double>(std::complex<double> *, const std::complex<double> &)
    -> INLINE: ../include/utils.h:(94,33) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(94,55) std::operator*(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(94,55) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (520,14) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (520,19) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (520,52) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (523,5) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (523,5) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (523,5) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (523,5) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (523,5) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (523,5) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: OpenMP optimizations [openmp]

Cartesian2D.cpp(457:1-457:1):OMP:_ZN12Cartesian_2D11Hamiltonian12X2_Laser_OMPESt7complexIdER12wavefunctionRKNS_8ABVparamEd7gauge_t:  OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(462,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at Cartesian2D.cpp(468,6)
      remark #15523: loop was not vectorized: loop control variable j1 was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(476,6)
      remark #15523: loop was not vectorized: loop control variable j2 was found, but loop iteration count cannot be computed before executing the loop
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at ../include/utils.h(79,3) inlined into Cartesian2D.cpp(515,6)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 81 and  line 212
   LOOP END

   LOOP BEGIN at ../include/utils.h(92,3) inlined into Cartesian2D.cpp(515,6)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 212 and  line 212
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(518,6)
      remark #15523: loop was not vectorized: loop control variable j3 was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
../include/utils.h(77,37):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (8, 0)
../include/utils.h(82,36):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (8, 0)
===========================================================================

Begin optimization report for: Cartesian_2D::Hamiltonian::X1_Laser_dx4_OMP(Cartesian_2D::Hamiltonian *, std::complex<double>, wavefunction &, const Cartesian_2D::ABVparam &, double, gauge_t)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Hamiltonian::X1_Laser_dx4_OMP(Cartesian_2D::Hamiltonian *, std::complex<double>, wavefunction &, const Cartesian_2D::ABVparam &, double, gauge_t)) [183] Cartesian2D.cpp(530,3)
  -> INLINE: (533,26) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (533,29) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (534,40) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (535,24) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (536,24) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (537,27) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (537,27) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (538,27) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (538,27) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (539,24) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (540,24) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (541,12) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (541,20) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (541,28) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (541,36) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (541,44) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (544,26) std::allocator<double>::~allocator(std::allocator<double> *)
  -> (544,35) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> DELETED: (544,35) std::allocator<double>::~allocator(std::allocator<double> *)
  -> (544,35) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::value_type &, const std::vector<double, std::allocator<double>>::allocator_type &)
  -> DELETED: (544,35) std::allocator<double>::allocator(std::allocator<double> *)
  -> INLINE: (550,43) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (550,56) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (552,13) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (552,24) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (553,13) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (553,30) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (560,4) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (563,21) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (563,32) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (563,32) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (563,32) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (563,32) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (563,32) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> DELETED: (563,36) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (563,48) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (563,48) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (563,48) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (563,48) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (563,48) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> INLINE: (566,25) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (567,38) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (567,45) std::complex<double>::operator=(std::complex<double> *, double)
  -> INLINE: (567,49) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (567,62) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (568,11) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (568,26) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> DELETED: (571,35) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (571,48) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (571,48) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (571,48) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (571,48) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (571,48) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> DELETED: (571,53) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (571,75) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (571,75) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (571,75) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (571,75) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (571,75) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> INLINE: (577,29) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (577,29) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (577,29) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (578,14) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (578,32) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (578,32) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (578,32) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (579,29) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (579,29) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (579,29) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (580,29) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (580,29) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (580,29) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (581,29) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (581,29) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (581,29) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (582,29) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (582,29) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (582,29) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (588,21) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (588,40) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (588,40) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (588,62) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (588,62) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (588,62) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (588,82) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (588,82) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (588,82) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (592,32) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (592,53) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (592,53) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (592,53) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (592,53) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (592,53) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> DELETED: (592,57) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (592,67) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (592,67) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (592,67) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (592,67) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (592,67) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> INLINE: (593,5) Tridag_Fast(const std::complex<double> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, const std::complex<double> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &)
    -> INLINE: ../include/utils.h:(69,33) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size(const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *) const
    -> INLINE: ../include/utils.h:(77,37) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(78,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(78,36) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(78,42) std::operator/(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(81,10) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(81,44) std::operator/(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(82,36) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(83,11) std::complex<double>::operator-=<double>(std::complex<double> *, const std::complex<double> &)
    -> INLINE: ../include/utils.h:(83,39) std::operator*(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(83,39) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(89,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(89,46) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(89,88) std::operator-(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(89,88) std::operator*(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(89,88) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(89,102) std::operator/(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(94,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(94,27) std::complex<double>::operator-=<double>(std::complex<double> *, const std::complex<double> &)
    -> INLINE: ../include/utils.h:(94,33) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(94,55) std::operator*(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(94,55) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (597,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (597,18) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (597,49) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (600,4) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (600,4) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (600,4) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (600,4) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (600,4) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (600,4) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(550,11)
   remark #15523: loop was not vectorized: loop control variable ii was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at Cartesian2D.cpp(560,4)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at Cartesian2D.cpp(564,5)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(572,5)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at ../include/utils.h(79,3) inlined into Cartesian2D.cpp(593,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between  line 82 and  line 212
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END

   LOOP BEGIN at ../include/utils.h(92,3) inlined into Cartesian2D.cpp(593,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 212 and  line 212
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(595,5)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
../include/utils.h(77,37):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (8, 0)
../include/utils.h(82,36):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (8, 0)
===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::value_type &, const std::vector<double, std::allocator<double>>::allocator_type &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(757,7) inlined into /usr/include/c++/4.4.7/bits/stl_vector.h(231,9)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(757,7) inlined into /usr/include/c++/4.4.7/bits/stl_vector.h(231,9)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(757,7) inlined into /usr/include/c++/4.4.7/bits/stl_vector.h(231,9)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::Hamiltonian::X2_Laser_dx4_OMP(Cartesian_2D::Hamiltonian *, std::complex<double>, wavefunction &, const Cartesian_2D::ABVparam &, double, gauge_t)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Hamiltonian::X2_Laser_dx4_OMP(Cartesian_2D::Hamiltonian *, std::complex<double>, wavefunction &, const Cartesian_2D::ABVparam &, double, gauge_t)) [191] Cartesian2D.cpp(609,3)
  -> INLINE: (612,26) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (612,29) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (613,40) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (614,24) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (615,24) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (616,27) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (616,27) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (617,27) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (617,27) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (618,24) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (619,24) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (620,12) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (620,20) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (620,28) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (620,36) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (620,44) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (623,26) std::allocator<double>::~allocator(std::allocator<double> *)
  -> (623,35) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> DELETED: (623,35) std::allocator<double>::~allocator(std::allocator<double> *)
  -> (623,35) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::value_type &, const std::vector<double, std::allocator<double>>::allocator_type &)
  -> DELETED: (623,35) std::allocator<double>::allocator(std::allocator<double> *)
  -> INLINE: (629,45) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (629,58) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (631,15) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (631,26) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (632,15) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (632,32) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (639,4) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (642,21) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (642,32) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (642,32) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (642,32) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (642,32) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (642,32) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> DELETED: (642,36) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (642,48) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (642,48) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (642,48) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (642,48) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (642,48) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> INLINE: (645,25) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (646,38) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (646,45) std::complex<double>::operator=(std::complex<double> *, double)
  -> INLINE: (646,49) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (646,62) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (647,11) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (647,26) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> DELETED: (650,35) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (650,48) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (650,48) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (650,48) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (650,48) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (650,48) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> DELETED: (650,53) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (650,75) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (650,75) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (650,75) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (650,75) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (650,75) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> INLINE: (656,29) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (656,29) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (656,29) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (657,14) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (657,31) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (657,31) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (657,31) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (658,29) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (658,29) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (658,29) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (659,29) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (659,29) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (659,29) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (660,29) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (660,29) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (660,29) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (661,29) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (661,29) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (661,29) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (667,21) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (667,40) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (667,40) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (667,62) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (667,62) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (667,62) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (667,82) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (667,82) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (667,82) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (671,32) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (671,53) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (671,53) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (671,53) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (671,53) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (671,53) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> DELETED: (671,57) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (671,67) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (671,67) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (671,67) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (671,67) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (671,67) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> INLINE: (672,5) Tridag_Fast(const std::complex<double> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, const std::complex<double> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &)
    -> INLINE: ../include/utils.h:(69,33) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size(const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *) const
    -> INLINE: ../include/utils.h:(77,37) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(78,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(78,36) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(78,42) std::operator/(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(81,10) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(81,44) std::operator/(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(82,36) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(83,11) std::complex<double>::operator-=<double>(std::complex<double> *, const std::complex<double> &)
    -> INLINE: ../include/utils.h:(83,39) std::operator*(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(83,39) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(89,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(89,46) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
    -> INLINE: ../include/utils.h:(89,88) std::operator-(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(89,88) std::operator*(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(89,88) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(89,102) std::operator/(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(94,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(94,27) std::complex<double>::operator-=<double>(std::complex<double> *, const std::complex<double> &)
    -> INLINE: ../include/utils.h:(94,33) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: ../include/utils.h:(94,55) std::operator*(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/utils.h:(94,55) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (676,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (676,18) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (676,49) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (679,4) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (679,4) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (679,4) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (679,4) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (679,4) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (679,4) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(629,13)
   remark #15523: loop was not vectorized: loop control variable jj was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at Cartesian2D.cpp(639,4)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at Cartesian2D.cpp(643,5)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(651,5)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at ../include/utils.h(79,3) inlined into Cartesian2D.cpp(672,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between  line 82 and  line 212
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END

   LOOP BEGIN at ../include/utils.h(92,3) inlined into Cartesian2D.cpp(672,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 212 and  line 212
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(674,5)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
../include/utils.h(77,37):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (8, 0)
../include/utils.h(82,36):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (8, 0)
===========================================================================

Begin optimization report for: Cartesian_2D::Hamiltonian::X1_ECS_AP_OMP(Cartesian_2D::Hamiltonian *, std::complex<double>, wavefunction &, const Cartesian_2D::ABVparam &, double, double, double)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Hamiltonian::X1_ECS_AP_OMP(Cartesian_2D::Hamiltonian *, std::complex<double>, wavefunction &, const Cartesian_2D::ABVparam &, double, double, double)) [192] Cartesian2D.cpp(692,3)
  -> INLINE: (696,23) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (696,33) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (696,54) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (697,23) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (697,33) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (697,56) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (697,58) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (697,71) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (697,71) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (709,18) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (709,29) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (709,29) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (709,29) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (709,29) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (709,29) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> DELETED: (709,33) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (709,45) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (709,45) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (709,45) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (709,45) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (709,45) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> INLINE: (712,10) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (712,17) std::complex<double>::operator=(std::complex<double> *, double)
  -> INLINE: (712,26) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (712,31) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (713,11) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (713,26) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (713,32) wavefunction::in2(const wavefunction *, int, int) const
  -> DELETED: (716,25) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (716,42) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (716,42) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (716,42) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (716,42) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (716,42) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> DELETED: (716,46) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (716,63) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (716,63) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (716,63) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (716,63) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (716,63) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> DELETED: (716,67) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (716,83) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (716,83) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (716,83) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (716,83) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (716,83) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> DELETED: (716,87) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (716,109) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (716,109) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (716,109) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (716,109) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (716,109) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> INLINE: (719,24) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (719,34) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (719,42) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (719,42) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (723,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (723,31) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (724,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (724,31) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (724,31) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (724,37) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (725,12) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (725,30) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (726,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (727,16) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (727,16) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (727,27) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (727,27) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (728,22) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (728,22) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (728,35) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (728,35) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (728,35) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (729,15) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (729,26) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (729,26) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (729,26) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (734,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (734,39) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (734,41) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (734,41) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (734,41) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (734,47) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (735,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (735,28) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (735,42) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (735,44) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (735,44) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (735,44) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (735,44) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (735,50) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (736,12) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (736,38) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (736,40) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (736,40) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (736,40) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (736,46) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (738,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (739,16) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (739,16) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (739,27) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (739,27) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (740,21) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (740,21) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (740,34) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (740,34) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (740,34) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (741,15) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (741,26) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (741,26) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (741,26) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (746,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (746,27) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (746,35) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (746,37) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (746,37) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (746,37) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (746,53) std::operator/(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (746,53) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (746,53) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (746,53) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (746,63) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (746,76) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (746,78) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (746,78) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (746,78) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (746,94) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (746,94) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (746,94) std::operator/(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (746,94) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (746,94) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (746,94) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (747,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (747,40) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (747,42) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (747,42) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (747,42) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (747,42) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (747,42) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (747,49) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (747,58) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (747,71) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (747,71) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (747,77) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (747,77) std::operator-(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (747,87) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (747,87) std::operator/(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (747,87) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (747,87) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (748,12) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (748,26) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (748,39) std::operator/(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (748,39) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (748,39) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (748,39) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (748,49) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (748,62) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (748,62) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (748,78) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (748,78) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (748,78) std::operator/(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (748,78) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (748,78) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (748,78) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (750,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (751,16) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (751,16) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (751,27) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (751,27) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (752,23) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (752,23) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (752,36) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (752,36) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (752,36) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (753,15) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (753,26) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (753,26) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (753,26) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (759,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (759,28) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (759,41) std::operator/(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (759,41) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (759,41) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (759,41) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (759,51) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (759,65) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (759,65) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (759,65) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (759,81) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (759,81) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (759,81) std::operator/(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (759,81) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (759,81) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (759,81) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (760,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (760,41) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (760,43) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (760,43) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (760,43) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (760,43) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (760,43) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (760,50) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (760,59) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (760,72) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (760,72) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (760,78) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (760,78) std::operator-(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (760,88) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (760,88) std::operator/(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (760,88) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (760,88) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (761,12) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (761,36) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (761,38) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (761,38) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (761,38) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (761,38) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (761,55) std::operator/(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (761,55) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (761,55) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (761,55) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (761,65) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (761,77) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (761,79) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (761,79) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (761,95) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (761,95) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (761,95) std::operator/(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (761,95) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (761,95) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (761,95) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (763,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (764,16) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (764,16) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (764,27) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (764,27) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (765,21) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (765,21) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (765,34) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (765,34) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (765,34) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (766,15) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (766,26) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (766,26) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (766,26) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> DELETED: (770,25) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (770,46) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (770,46) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (770,46) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (770,46) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (770,46) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> DELETED: (770,50) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (770,60) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (770,60) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (770,60) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (770,60) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (770,60) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> (772,2) Tridag(const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &)
  -> INLINE: (774,46) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (774,51) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (774,82) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (776,7) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (776,7) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> (776,7) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> (776,7) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> (776,7) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> (776,7) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> (776,7) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> (776,7) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(706,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at Cartesian2D.cpp(710,2)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(726,3)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(774,2)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
===========================================================================

Begin optimization report for: std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into /usr/include/c++/4.4.7/bits/stl_vector.h(231,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into /usr/include/c++/4.4.7/bits/stl_vector.h(231,9)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: Tridag(const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Tridag(const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &)) [196] ../include/utils.h(29,1)
  -> INLINE: (30,33) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size(const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *) const
  -> INLINE: (36,37) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
  -> INLINE: (37,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (37,36) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
  -> INLINE: (37,42) std::operator/(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (40,10) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (40,43) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
  -> INLINE: (40,55) std::operator/(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (41,36) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
  -> INLINE: (42,11) std::complex<double>::operator-=<double>(std::complex<double> *, const std::complex<double> &)
  -> INLINE: (42,35) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
  -> INLINE: (42,48) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (42,48) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (51,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (51,46) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
  -> INLINE: (51,77) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](const std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type) const
  -> INLINE: (51,97) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (51,97) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (51,97) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (51,111) std::operator/(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (59,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (59,27) std::complex<double>::operator-=<double>(std::complex<double> *, const std::complex<double> &)
  -> INLINE: (59,33) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (59,55) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (59,55) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at ../include/utils.h(38,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 40 and  line 51
LOOP END

LOOP BEGIN at ../include/utils.h(57,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 212 and  line 212
LOOP END

    Report from: Code generation optimizations [cg]

/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
../include/utils.h(36,37):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (8, 0)
../include/utils.h(41,36):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (8, 0)
===========================================================================

Begin optimization report for: Cartesian_2D::Hamiltonian::X2_ECS_AP_OMP(Cartesian_2D::Hamiltonian *, std::complex<double>, wavefunction &, const Cartesian_2D::ABVparam &, double, double, double)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Hamiltonian::X2_ECS_AP_OMP(Cartesian_2D::Hamiltonian *, std::complex<double>, wavefunction &, const Cartesian_2D::ABVparam &, double, double, double)) [198] Cartesian2D.cpp(783,3)
  -> INLINE: (787,23) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (787,33) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (787,54) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (788,23) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (788,33) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (788,56) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (788,58) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (788,71) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (788,71) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (800,18) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (800,29) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (800,29) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (800,29) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (800,29) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (800,29) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> DELETED: (800,33) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (800,45) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (800,45) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (800,45) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (800,45) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (800,45) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> INLINE: (803,10) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (803,17) std::complex<double>::operator=(std::complex<double> *, double)
  -> INLINE: (803,26) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (803,31) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (804,11) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (804,26) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (804,32) wavefunction::in2(const wavefunction *, int, int) const
  -> DELETED: (807,25) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (807,42) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (807,42) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (807,42) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (807,42) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (807,42) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> DELETED: (807,46) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (807,63) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (807,63) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (807,63) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (807,63) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (807,63) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> DELETED: (807,67) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (807,83) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (807,83) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (807,83) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (807,83) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (807,83) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> DELETED: (807,87) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (807,109) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (807,109) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (807,109) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (807,109) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (807,109) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> INLINE: (810,24) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (810,34) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (810,42) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (810,42) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (814,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (814,31) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (815,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (815,31) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (815,31) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (815,37) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (816,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (816,30) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (817,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (818,16) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (818,16) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (818,27) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (818,27) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (819,22) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (819,22) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (819,35) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (819,35) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (819,35) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (820,15) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (820,26) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (820,26) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (820,26) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (825,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (825,39) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (825,41) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (825,41) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (825,41) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (825,47) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (827,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (827,28) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (827,42) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (827,44) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (827,44) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (827,44) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (827,44) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (827,50) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (828,12) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (828,38) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (828,40) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (828,40) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (828,40) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (828,46) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (831,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (832,16) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (832,16) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (832,27) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (832,27) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (833,21) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (833,21) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (833,34) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (833,34) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (833,34) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (834,15) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (834,26) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (834,26) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (834,26) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (839,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (839,27) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (839,35) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (839,37) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (839,37) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (839,37) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (839,53) std::operator/(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (839,53) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (839,53) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (839,53) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (839,63) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (839,76) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (839,78) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (839,78) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (839,78) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (839,94) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (839,94) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (839,94) std::operator/(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (839,94) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (839,94) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (839,94) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (840,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (840,40) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (840,42) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (840,42) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (840,42) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (840,42) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (840,42) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (840,49) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (840,58) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (840,71) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (840,71) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (840,77) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (840,77) std::operator-(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (840,87) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (840,87) std::operator/(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (840,87) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (840,87) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (841,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (841,26) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (841,39) std::operator/(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (841,39) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (841,39) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (841,39) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (841,49) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (841,62) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (841,62) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (841,78) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (841,78) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (841,78) std::operator/(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (841,78) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (841,78) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (841,78) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (843,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (844,16) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (844,16) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (844,27) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (844,27) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (845,23) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (845,23) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (845,36) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (845,36) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (845,36) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (846,15) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (846,26) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (846,26) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (846,26) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (852,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (852,28) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (852,41) std::operator/(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (852,41) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (852,41) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (852,41) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (852,51) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (852,65) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (852,65) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (852,65) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (852,81) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (852,81) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (852,81) std::operator/(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (852,81) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (852,81) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (852,81) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (853,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (853,41) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (853,43) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (853,43) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (853,43) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (853,43) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (853,43) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (853,50) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (853,59) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (853,72) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (853,72) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (853,78) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (853,78) std::operator-(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (853,88) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (853,88) std::operator/(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (853,88) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (853,88) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (854,12) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (854,36) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (854,38) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (854,38) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (854,38) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (854,38) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (854,55) std::operator/(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (854,55) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (854,55) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (854,55) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (854,65) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (854,77) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (854,79) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (854,79) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (854,95) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (854,95) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (854,95) std::operator/(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (854,95) std::operator+(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (854,95) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (854,95) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (856,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (857,16) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (857,16) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (857,27) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (857,27) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (858,21) std::operator-(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (858,21) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (858,34) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (858,34) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (858,34) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (859,15) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (859,26) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (859,26) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (859,26) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> DELETED: (863,25) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (863,46) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (863,46) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (863,46) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (863,46) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (863,46) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> DELETED: (863,50) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (863,60) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (863,60) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (863,60) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (863,60) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (863,60) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> (865,2) Tridag(const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &)
  -> INLINE: (867,46) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (867,51) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (867,82) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (869,7) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (869,7) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> (869,7) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> (869,7) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> (869,7) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> (869,7) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> (869,7) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> (869,7) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(797,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at Cartesian2D.cpp(801,2)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(817,3)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(867,2)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(247,31):remark #34048: consider using complex-limited-range option to boost run time performance.
===========================================================================

Begin optimization report for: Cartesian_2D::Guess_Function_Gauss(wavefunction &, std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Guess_Function_Gauss(wavefunction &, std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> *)) [265] Cartesian2D.cpp(1045,137)
  -> (1047,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1047,27) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, char)
  -> (1047,33) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> (1047,41) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, char)
  -> (1047,47) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> (1047,55) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (1048,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1048,25) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, char)
  -> (1048,38) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, char)
  -> (1048,51) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1054,27) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1054,46) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1054,65) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1055,27) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1055,46) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1055,65) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1057,38) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1057,38) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1057,49) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1057,49) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1058,38) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1058,38) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1058,49) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1058,49) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1060,11) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1060,16) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1060,77) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1060,77) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1060,77) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(1050,2)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at Cartesian2D.cpp(1052,3)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::Even_Parity_Function(wavefunction &, std::vector<double, std::allocator<double>> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Even_Parity_Function(wavefunction &, std::vector<double, std::allocator<double>> *)) [266] Cartesian2D.cpp(1069,73)
  -> INLINE: (1075,12) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1075,16) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1075,26) std::complex<double>::operator=(std::complex<double> *, double)
  -> INLINE: (1075,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1075,51) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1075,67) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1075,76) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1075,86) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1075,96) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1075,105) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1075,115) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(1071,6)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at Cartesian2D.cpp(1073,2)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::Normalize(wavefunction &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Normalize(wavefunction &)) [267] Cartesian2D.cpp(1127,2)
  -> INLINE: (1128,17) Cartesian_2D::Obs_Norm(wavefunction &)
    -> INLINE: (1156,12) std::norm<double>(const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1156,25) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1156,30) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1134,11) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1134,21) std::complex<double>::operator/=(std::complex<double> *, double)
  -> INLINE: (1137,10) Cartesian_2D::Obs_Norm(wavefunction &)
    -> INLINE: (1156,12) std::norm<double>(const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1156,25) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1156,30) wavefunction::in2(const wavefunction *, int, int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(1152,3) inlined into Cartesian2D.cpp(1128,17)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at Cartesian2D.cpp(1154,4) inlined into Cartesian2D.cpp(1128,17)
   <Peeled loop for vectorization>
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1154,4) inlined into Cartesian2D.cpp(1128,17)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1154,4) inlined into Cartesian2D.cpp(1128,17)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END

LOOP BEGIN at Cartesian2D.cpp(1132,3)
   remark #15523: loop was not vectorized: loop control variable index was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::Obs_Norm(wavefunction &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Obs_Norm(wavefunction &)) [268] Cartesian2D.cpp(1149,2)
  -> INLINE: (1156,12) std::norm<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1156,25) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1156,30) wavefunction::in2(const wavefunction *, int, int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(1152,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at Cartesian2D.cpp(1154,4)
   <Peeled loop for vectorization>
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1154,4)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1154,4)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::Obs_Energy(wavefunction &, Cartesian_2D::ABVparam &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Obs_Energy(wavefunction &, Cartesian_2D::ABVparam &)) [269] Cartesian2D.cpp(1172,2)
  -> INLINE: (1179,12) std::real<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1179,31) std::conj(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1179,31) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1179,36) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1180,19) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1180,24) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1180,35) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1180,44) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1180,49) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1181,44) Cartesian_2D::Second_Derivative_X1(wavefunction &, int, int)
    -> INLINE: (1440,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1440,23) wavefunction::in2(const wavefunction *, int, int) const
    -> INLINE: (1440,48) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1440,48) std::operator-(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1440,53) wavefunction::in2(const wavefunction *, int, int) const
    -> INLINE: (1440,68) std::operator*(const std::complex<double> &, const double &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1444,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1444,23) wavefunction::in2(const wavefunction *, int, int) const
    -> INLINE: (1444,50) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1444,50) std::operator*(const double &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1444,50) std::operator-(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1444,55) wavefunction::in2(const wavefunction *, int, int) const
    -> INLINE: (1444,70) std::operator*(const std::complex<double> &, const double &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1449,23) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1449,28) wavefunction::in2(const wavefunction *, int, int) const
    -> INLINE: (1449,56) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1449,56) std::operator*(const double &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1449,56) std::operator-(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1449,61) wavefunction::in2(const wavefunction *, int, int) const
    -> INLINE: (1449,81) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1449,81) std::operator+(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1449,86) wavefunction::in2(const wavefunction *, int, int) const
    -> INLINE: (1449,108) std::operator*(const std::complex<double> &, const double &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1181,48) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1181,48) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1182,44) Cartesian_2D::Second_Derivative_X2(wavefunction &, int, int)
    -> INLINE: (1466,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1466,23) wavefunction::in2(const wavefunction *, int, int) const
    -> INLINE: (1466,48) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1466,48) std::operator-(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1466,53) wavefunction::in2(const wavefunction *, int, int) const
    -> INLINE: (1466,68) std::operator*(const std::complex<double> &, const double &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1471,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1471,23) wavefunction::in2(const wavefunction *, int, int) const
    -> INLINE: (1471,51) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1471,51) std::operator*(const double &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1471,51) std::operator-(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1471,56) wavefunction::in2(const wavefunction *, int, int) const
    -> INLINE: (1471,71) std::operator*(const std::complex<double> &, const double &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1477,23) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1477,28) wavefunction::in2(const wavefunction *, int, int) const
    -> INLINE: (1477,56) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1477,56) std::operator*(const double &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1477,56) std::operator-(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1477,61) wavefunction::in2(const wavefunction *, int, int) const
    -> INLINE: (1477,81) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1477,81) std::operator+(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1477,86) wavefunction::in2(const wavefunction *, int, int) const
    -> INLINE: (1477,108) std::operator*(const std::complex<double> &, const double &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1182,48) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1182,48) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1182,48) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(1177,4)
<Predicate Optimized v1>
   remark #25422: Invariant Condition at line 1464 hoisted out of this loop
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 1182 and  line 1179
LOOP END

LOOP BEGIN at Cartesian2D.cpp(1177,4)
<Predicate Optimized v3>
   remark #25422: Invariant Condition at line 1469 hoisted out of this loop
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 1182 and  line 1179
LOOP END

LOOP BEGIN at Cartesian2D.cpp(1177,4)
<Predicate Optimized v4>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 1182 and  line 1179
LOOP END

LOOP BEGIN at Cartesian2D.cpp(1175,3)
   remark #25261: Invariant Condition eliminated(Proven True) at line 1437
   remark #25260: Invariant Condition eliminated(Proven False) at line 1463
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 1182 and  line 1179

   LOOP BEGIN at Cartesian2D.cpp(1177,4)
      remark #25258: Invariant Condition eliminated(Loop at level 2 peeled) at line 1437 
      remark #25260: Invariant Condition eliminated(Proven False) at line 1437
      remark #25258: Invariant Condition eliminated(Loop at level 1 peeled) at line 1463 
      remark #25260: Invariant Condition eliminated(Proven False) at line 1463
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 1182 and  line 1179
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::Obs_Energy_X2(wavefunction &, Cartesian_2D::ABVparam &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Obs_Energy_X2(wavefunction &, Cartesian_2D::ABVparam &)) [270] Cartesian2D.cpp(1196,2)
  -> INLINE: (1203,12) std::real<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1203,31) std::conj(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1203,31) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1203,36) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1204,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1204,22) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1204,42) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1204,42) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1204,47) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1205,43) Cartesian_2D::Second_Derivative_X2(wavefunction &, int, int)
    -> INLINE: (1466,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1466,23) wavefunction::in2(const wavefunction *, int, int) const
    -> INLINE: (1466,48) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1466,48) std::operator-(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1466,53) wavefunction::in2(const wavefunction *, int, int) const
    -> INLINE: (1466,68) std::operator*(const std::complex<double> &, const double &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1471,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1471,23) wavefunction::in2(const wavefunction *, int, int) const
    -> INLINE: (1471,51) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1471,51) std::operator*(const double &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1471,51) std::operator-(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1471,56) wavefunction::in2(const wavefunction *, int, int) const
    -> INLINE: (1471,71) std::operator*(const std::complex<double> &, const double &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1477,23) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1477,28) wavefunction::in2(const wavefunction *, int, int) const
    -> INLINE: (1477,56) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1477,56) std::operator*(const double &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1477,56) std::operator-(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1477,61) wavefunction::in2(const wavefunction *, int, int) const
    -> INLINE: (1477,81) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1477,81) std::operator+(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1477,86) wavefunction::in2(const wavefunction *, int, int) const
    -> INLINE: (1477,108) std::operator*(const std::complex<double> &, const double &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1205,47) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1205,47) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1205,47) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(1201,4)
<Predicate Optimized v1>
   remark #25422: Invariant Condition at line 1464 hoisted out of this loop
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 1205 and  line 1203
LOOP END

LOOP BEGIN at Cartesian2D.cpp(1201,4)
<Predicate Optimized v3>
   remark #25422: Invariant Condition at line 1469 hoisted out of this loop
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 1205 and  line 1203
LOOP END

LOOP BEGIN at Cartesian2D.cpp(1201,4)
<Predicate Optimized v4>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 1205 and  line 1203
LOOP END

LOOP BEGIN at Cartesian2D.cpp(1199,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 1205 and  line 1203

   LOOP BEGIN at Cartesian2D.cpp(1201,4)
      remark #25258: Invariant Condition eliminated(Loop at level 1 peeled) at line 1463 
      remark #25260: Invariant Condition eliminated(Proven False) at line 1463
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 1205 and  line 1203
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::Obs_Expectation_Value_X1(wavefunction &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Obs_Expectation_Value_X1(wavefunction &)) [271] Cartesian2D.cpp(1220,2)
  -> INLINE: (1227,17) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1228,7) std::norm<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1228,20) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1228,25) wavefunction::in2(const wavefunction *, int, int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(1223,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at Cartesian2D.cpp(1225,4)
   <Peeled loop for vectorization>
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1225,4)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1225,4)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::Obs_Expectation_Value_X2(wavefunction &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Obs_Expectation_Value_X2(wavefunction &)) [272] Cartesian2D.cpp(1244,2)
  -> INLINE: (1251,17) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1252,7) std::norm<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1252,20) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1252,25) wavefunction::in2(const wavefunction *, int, int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(1247,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at Cartesian2D.cpp(1249,4)
   <Peeled loop for vectorization>
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1249,4)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1249,4)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::Obs_Expectation_Value_Width_X1(wavefunction &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Obs_Expectation_Value_Width_X1(wavefunction &)) [273] Cartesian2D.cpp(1269,3)
  -> INLINE: (1271,21) Cartesian_2D::Obs_Expectation_Value_X1(wavefunction &)
    -> INLINE: (1227,17) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: (1228,7) std::norm<double>(const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1228,20) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1228,25) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1279,20) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1279,31) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1280,8) std::norm<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1280,21) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1280,26) wavefunction::in2(const wavefunction *, int, int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(1223,3) inlined into Cartesian2D.cpp(1271,21)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at Cartesian2D.cpp(1225,4) inlined into Cartesian2D.cpp(1271,21)
   <Peeled loop for vectorization>
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1225,4) inlined into Cartesian2D.cpp(1271,21)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1225,4) inlined into Cartesian2D.cpp(1271,21)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END

LOOP BEGIN at Cartesian2D.cpp(1275,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at Cartesian2D.cpp(1277,6)
   <Peeled loop for vectorization>
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1277,6)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1277,6)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::Obs_Expectation_Value_Width_X2(wavefunction &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Obs_Expectation_Value_Width_X2(wavefunction &)) [274] Cartesian2D.cpp(1296,3)
  -> INLINE: (1298,21) Cartesian_2D::Obs_Expectation_Value_X2(wavefunction &)
    -> INLINE: (1251,17) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: (1252,7) std::norm<double>(const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1252,20) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1252,25) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1306,20) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1306,31) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1307,8) std::norm<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1307,21) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1307,26) wavefunction::in2(const wavefunction *, int, int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(1247,3) inlined into Cartesian2D.cpp(1298,21)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at Cartesian2D.cpp(1249,4) inlined into Cartesian2D.cpp(1298,21)
   <Peeled loop for vectorization>
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1249,4) inlined into Cartesian2D.cpp(1298,21)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1249,4) inlined into Cartesian2D.cpp(1298,21)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END

LOOP BEGIN at Cartesian2D.cpp(1302,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at Cartesian2D.cpp(1304,6)
   <Peeled loop for vectorization>
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1304,6)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1304,6)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::Obs_Serialize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, wavefunction &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Obs_Serialize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, wavefunction &)) [275] Cartesian2D.cpp(1325,3)
  -> (1326,21) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> (1326,21) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> INLINE: (1327,12) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::reserve(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1334,10) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::push_back(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1334,27) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1334,32) wavefunction::in2(const wavefunction *, int, int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(1327,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(1327,12)
<Remainder>
LOOP END

LOOP BEGIN at Cartesian2D.cpp(1330,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at Cartesian2D.cpp(1332,6)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(545,4) inlined into Cartesian2D.cpp(1334,10)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between  line 546 and  line 546
         remark #25439: unrolled with remainder by 2  
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
         remark #25457: Number of partial sums replaced: 1
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(545,4) inlined into Cartesian2D.cpp(1334,10)
      <Remainder>
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(1334,10)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
         remark #25439: unrolled with remainder by 2  
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(1334,10)
      <Remainder>
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(1334,10)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
         remark #25439: unrolled with remainder by 2  
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(1334,10)
      <Remainder>
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::Obs_Projection_X2(std::vector<double, std::allocator<double>> *, wavefunction &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Obs_Projection_X2(std::vector<double, std::allocator<double>> *, wavefunction &)) [280] Cartesian2D.cpp(1348,3)
  -> (1349,20) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (1349,20) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> INLINE: (1350,12) std::vector<double, std::allocator<double>>::reserve(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1357,14) std::abs<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1357,26) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1357,31) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1358,12) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(1353,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at Cartesian2D.cpp(1356,6)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1356,6)
   <Remainder loop for vectorization>
      remark #15313: remainder loop was not vectorized: unsupported data type   [ /usr/include/c++/4.4.7/complex(582,50) ]
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.4.7/bits/stl_algobase.h(378,4):remark #34026: call to memmove implemented as a call to optimized library version
===========================================================================

Begin optimization report for: Cartesian_2D::First_Derivative_X1(wavefunction &, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::First_Derivative_X1(wavefunction &, int, int)) [284] Cartesian2D.cpp(1375,2)
  -> INLINE: (1376,11) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (1381,21) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1381,26) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1381,51) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1381,51) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1381,56) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1381,71) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1387,21) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1387,26) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1387,51) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1387,51) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1387,56) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1387,71) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1392,21) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1392,26) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1392,51) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1392,51) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1392,56) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1392,78) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}

===========================================================================

Begin optimization report for: Cartesian_2D::First_Derivative_X2(wavefunction &, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::First_Derivative_X2(wavefunction &, int, int)) [285] Cartesian2D.cpp(1404,3)
  -> INLINE: (1405,13) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (1409,19) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1409,24) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1409,49) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1409,49) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1409,54) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1409,69) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1414,19) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1414,24) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1414,49) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1414,49) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1414,54) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1414,69) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1419,19) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1419,24) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1419,49) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1419,49) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1419,54) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1419,76) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}

===========================================================================

Begin optimization report for: Cartesian_2D::Second_Derivative_X1(wavefunction &, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Second_Derivative_X1(wavefunction &, int, int)) [286] Cartesian2D.cpp(1435,3)
  -> INLINE: (1440,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1440,23) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1440,48) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1440,48) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1440,53) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1440,68) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1444,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1444,23) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1444,50) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1444,50) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1444,50) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1444,55) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1444,70) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1449,23) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1449,28) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1449,56) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1449,56) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1449,56) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1449,61) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1449,81) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1449,81) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1449,86) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1449,108) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}

===========================================================================

Begin optimization report for: Cartesian_2D::Second_Derivative_X2(wavefunction &, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Second_Derivative_X2(wavefunction &, int, int)) [287] Cartesian2D.cpp(1461,3)
  -> INLINE: (1466,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1466,23) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1466,48) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1466,48) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1466,53) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1466,68) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1471,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1471,23) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1471,51) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1471,51) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1471,51) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1471,56) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1471,71) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1477,23) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1477,28) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1477,56) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1477,56) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1477,56) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1477,61) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1477,81) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1477,81) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1477,86) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1477,108) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}

===========================================================================

Begin optimization report for: Cartesian_2D::Gauss_partition(wavefunction &, double, double, double, double, double, int, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> &, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Gauss_partition(wavefunction &, double, double, double, double, double, int, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> &, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> &)) [288] Cartesian2D.cpp(1486,1)
  -> INLINE: (1492,33) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1493,33) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1494,32) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1495,32) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1507,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1507,13) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::resize(std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::value_type *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1507,41) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> (1507,41) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> INLINE: (1508,56) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::operator[](std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type)
  -> INLINE: (1508,60) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::resize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1508,86) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (1509,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1509,13) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::resize(std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::value_type *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1509,34) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> (1509,34) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> INLINE: (1510,49) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::operator[](std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type)
  -> INLINE: (1510,53) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::resize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1510,79) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (1517,29) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1517,57) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1520,21) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::operator[](std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type)
  -> INLINE: (1520,41) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1520,79) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1520,79) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1520,83) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1522,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1522,22) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1522,31) std::complex<double>::operator*=(std::complex<double> *, double)
  -> INLINE: (1526,43) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1526,70) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1529,21) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::operator[](std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type)
  -> INLINE: (1529,26) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1529,64) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1529,64) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1529,68) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1531,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1531,22) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1531,31) std::complex<double>::operator*=(std::complex<double> *, double)
  -> INLINE: (1535,29) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1535,57) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1537,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1537,22) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1537,31) std::complex<double>::operator*=(std::complex<double> *, double)
  -> INLINE: (1541,43) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1541,70) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1543,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1543,22) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1543,31) std::complex<double>::operator*=(std::complex<double> *, double)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_construct.h(99,4) inlined into Cartesian2D.cpp(1507,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 132 and  line 95
LOOP END

LOOP BEGIN at Cartesian2D.cpp(1508,6)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_construct.h(99,4) inlined into Cartesian2D.cpp(1509,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 132 and  line 95
LOOP END

LOOP BEGIN at Cartesian2D.cpp(1510,6)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(1510,53)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(1510,53)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(545,4) inlined into Cartesian2D.cpp(1510,53)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 546 and  line 546
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(545,4) inlined into Cartesian2D.cpp(1510,53)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(690,7) inlined into Cartesian2D.cpp(1510,53)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 690 and  line 691
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(690,7) inlined into Cartesian2D.cpp(1510,53)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into Cartesian2D.cpp(1510,53)
      remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.4.7/bits/stl_construct.h(80,7) ]
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into Cartesian2D.cpp(1510,53)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(1510,53)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(1510,53)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(690,7) inlined into Cartesian2D.cpp(1510,53)
      remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.4.7/bits/stl_algobase.h(691,3) ]
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(690,7) inlined into Cartesian2D.cpp(1510,53)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into Cartesian2D.cpp(1510,53)
      remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.4.7/bits/stl_construct.h(80,7) ]
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into Cartesian2D.cpp(1510,53)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(1510,53)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(1510,53)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(1510,53)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(1510,53)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at Cartesian2D.cpp(1512,6)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at Cartesian2D.cpp(1513,6)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.4.7/bits/stl_construct.h(80,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.4.7/bits/stl_construct.h(80,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.4.7/bits/stl_construct.h(80,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.4.7/bits/stl_construct.h(80,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.4.7/bits/stl_construct.h(80,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.4.7/bits/stl_construct.h(80,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
===========================================================================

Begin optimization report for: std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::_M_fill_insert(std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::iterator, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type, const std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::value_type &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(386,5)
   remark #15523: loop was not vectorized: loop control variable __cur was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(545,4) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(391,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.4.7/bits/stl_algobase.h(546,18) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(690,7) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(393,5)
   remark #15523: loop was not vectorized: loop control variable __first_26676 was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(398,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.4.7/bits/stl_construct.h(80,42) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(403,5)
   remark #15523: loop was not vectorized: loop control variable __cur was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/vector.tcc(408,6)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,23) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(407,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,23) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(407,5)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(407,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 343 and  line 343
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(407,5)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(407,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 343 and  line 343
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(407,5)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(407,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(407,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(420,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.4.7/bits/stl_construct.h(80,42) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(426,7)
   remark #15523: loop was not vectorized: loop control variable __cur was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(433,7)
   remark #15523: loop was not vectorized: loop control variable __cur was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_construct.h(99,4) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(450,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 132 and  line 95
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>::pointer>(std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>::pointer, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>::pointer)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_construct.h(99,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 132 and  line 95
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,23) inlined into /usr/include/c++/4.4.7/bits/stl_vector.h(245,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,23) inlined into /usr/include/c++/4.4.7/bits/stl_vector.h(245,4)
<Remainder>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator=(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, const std::vector<std::complex<double>, std::allocator<std::complex<double>>> &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,23) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(165,24)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,23) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(165,24)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(177,56)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 343 and  line 343
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(177,56)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(182,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 343 and  line 343
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(182,8)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(184,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(184,8)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::Mask_Function(wavefunction &, double, double, double, double, double)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Mask_Function(wavefunction &, double, double, double, double, double)) [298] Cartesian2D.cpp(1554,1)
  -> (1557,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1562,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1567,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1572,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> INLINE: (1576,38) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1577,38) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1578,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1579,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1596,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1596,67) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1598,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1598,17) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1598,26) std::complex<double>::operator*=(std::complex<double> *, double)
  -> INLINE: (1603,36) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1603,67) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1605,11) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1605,15) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1605,24) std::complex<double>::operator*=(std::complex<double> *, double)
  -> INLINE: (1611,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1611,67) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1613,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1613,17) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1613,26) std::complex<double>::operator*=(std::complex<double> *, double)
  -> INLINE: (1618,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1618,68) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1620,12) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1620,16) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1620,25) std::complex<double>::operator*=(std::complex<double> *, double)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(1589,6)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at Cartesian2D.cpp(1590,6)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::Mask_Function_OMP(wavefunction &, double, double, double, double, double)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Mask_Function_OMP(wavefunction &, double, double, double, double, double)) [302] Cartesian2D.cpp(1629,1)
  -> INLINE: (1631,38) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1632,38) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1633,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1634,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1659,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1659,67) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1661,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1661,17) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1661,26) std::complex<double>::operator*=(std::complex<double> *, double)
  -> INLINE: (1666,36) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1666,67) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1668,11) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1668,15) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1668,24) std::complex<double>::operator*=(std::complex<double> *, double)
  -> INLINE: (1674,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1674,67) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1676,13) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1676,17) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1676,26) std::complex<double>::operator*=(std::complex<double> *, double)
  -> INLINE: (1681,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1681,68) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1683,12) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1683,16) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1683,25) std::complex<double>::operator*=(std::complex<double> *, double)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(1649,6)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at Cartesian2D.cpp(1653,7)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::PlaceWaveFunction(wavefunction &, wavefunction &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::PlaceWaveFunction(wavefunction &, wavefunction &)) [303] Cartesian2D.cpp(1694,2)
  -> (1699,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1699,59) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1729,12) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1729,16) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1729,37) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (1735,12) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1735,16) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1735,61) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1735,71) wavefunction::in2(const wavefunction *, int, int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(1697,3)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at Cartesian2D.cpp(1726,3)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at Cartesian2D.cpp(1727,4)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END
LOOP END

LOOP BEGIN at Cartesian2D.cpp(1732,3)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at Cartesian2D.cpp(1733,4)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 2  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

Cartesian2D.cpp(1729,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
Cartesian2D.cpp(1729,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
Cartesian2D.cpp(1729,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
Cartesian2D.cpp(1729,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
Cartesian2D.cpp(1729,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
Cartesian2D.cpp(1729,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
Cartesian2D.cpp(1729,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
Cartesian2D.cpp(1729,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
===========================================================================

Begin optimization report for: Cartesian_2D::Project(wavefunction &, wavefunction &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Project(wavefunction &, wavefunction &)) [304] Cartesian2D.cpp(1742,2)
  -> INLINE: (1744,33) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (1749,15) std::complex<double>::operator+=<double>(std::complex<double> *, const std::complex<double> &)
  -> INLINE: (1749,31) std::conj(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1749,31) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1749,36) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1749,54) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1749,54) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1749,58) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1751,13) std::complex<double>::operator*=(std::complex<double> *, double)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(1746,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at Cartesian2D.cpp(1747,4)
   <Peeled loop for vectorization>
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1747,4)
      remark #25084: Preprocess Loopnests: Moving Out Store    [ /share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(205,9) ]
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1747,4)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::Overlap(wavefunction &, wavefunction &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Overlap(wavefunction &, wavefunction &)) [305] Cartesian2D.cpp(1756,2)
  -> INLINE: (1758,33) Cartesian_2D::Project(wavefunction &, wavefunction &)
    -> INLINE: (1744,33) std::complex<double>::complex(std::complex<double> *, double, double)
    -> INLINE: (1749,15) std::complex<double>::operator+=<double>(std::complex<double> *, const std::complex<double> &)
    -> INLINE: (1749,31) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1749,31) std::conj(const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1749,36) wavefunction::in2(const wavefunction *, int, int) const
    -> INLINE: (1749,54) std::operator*(const std::complex<double> &, const std::complex<double> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1749,54) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
    -> INLINE: (1749,58) wavefunction::in2(const wavefunction *, int, int) const
    -> INLINE: (1751,13) std::complex<double>::operator*=(std::complex<double> *, double)
  -> INLINE: (1759,20) std::real<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1759,37) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1759,37) std::conj(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(1746,3) inlined into Cartesian2D.cpp(1758,33)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at Cartesian2D.cpp(1747,4) inlined into Cartesian2D.cpp(1758,33)
   <Peeled loop for vectorization>
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1747,4) inlined into Cartesian2D.cpp(1758,33)
      remark #25084: Preprocess Loopnests: Moving Out Store    [ /share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(205,9) ]
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1747,4) inlined into Cartesian2D.cpp(1758,33)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::Project_Diff_Sizes(wavefunction &, wavefunction &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Project_Diff_Sizes(wavefunction &, wavefunction &)) [306] Cartesian2D.cpp(1764,2)
  -> INLINE: (1784,33) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (1790,15) std::complex<double>::operator+=<double>(std::complex<double> *, const std::complex<double> &)
  -> INLINE: (1790,36) std::conj(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1790,36) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1790,46) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1791,14) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1791,14) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1791,18) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1793,13) std::complex<double>::operator*=(std::complex<double> *, double)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(1787,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at Cartesian2D.cpp(1788,4)
   <Peeled loop for vectorization>
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1788,4)
      remark #25084: Preprocess Loopnests: Moving Out Store    [ /share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(205,9) ]
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1788,4)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::Distribution_X1(std::vector<double, std::allocator<double>> *, wavefunction &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Distribution_X1(std::vector<double, std::allocator<double>> *, wavefunction &)) [307] Cartesian2D.cpp(1843,1)
  -> DELETED: (1844,22) std::allocator<double>::~allocator(std::allocator<double> *)
  -> (1844,31) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> DELETED: (1844,31) std::allocator<double>::~allocator(std::allocator<double> *)
  -> (1844,31) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::value_type &, const std::vector<double, std::allocator<double>>::allocator_type &)
  -> DELETED: (1844,31) std::allocator<double>::allocator(std::allocator<double> *)
  -> INLINE: (1852,15) std::norm<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1852,27) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1852,32) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1855,11) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(1846,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at Cartesian2D.cpp(1850,7)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1850,7)
   <Remainder loop for vectorization>
      remark #15313: remainder loop was not vectorized: unsupported data type   [ /usr/include/c++/4.4.7/complex(582,50) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::Distribution_X2(std::vector<double, std::allocator<double>> *, wavefunction &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Distribution_X2(std::vector<double, std::allocator<double>> *, wavefunction &)) [308] Cartesian2D.cpp(1863,1)
  -> DELETED: (1864,22) std::allocator<double>::~allocator(std::allocator<double> *)
  -> (1864,31) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> DELETED: (1864,31) std::allocator<double>::~allocator(std::allocator<double> *)
  -> (1864,31) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::value_type &, const std::vector<double, std::allocator<double>>::allocator_type &)
  -> DELETED: (1864,31) std::allocator<double>::allocator(std::allocator<double> *)
  -> INLINE: (1871,15) std::norm<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1871,27) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1871,32) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1874,11) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(1866,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at Cartesian2D.cpp(1869,7)
   <Peeled loop for vectorization>
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1869,7)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1869,7)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::Obs_Expectation_Value_r(wavefunction &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Obs_Expectation_Value_r(wavefunction &)) [309] Cartesian2D.cpp(1909,3)
  -> INLINE: (1919,26) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1919,35) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1919,44) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1919,53) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1919,63) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1919,67) std::norm<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1919,80) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1919,85) wavefunction::in2(const wavefunction *, int, int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(1914,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at Cartesian2D.cpp(1916,6)
   <Peeled loop for vectorization>
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1916,6)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1916,6)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::Obs_Expectation_Value_Inv_r(wavefunction &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Obs_Expectation_Value_Inv_r(wavefunction &)) [310] Cartesian2D.cpp(1932,3)
  -> INLINE: (1941,33) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1941,42) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1941,51) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1941,60) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1941,65) std::norm<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1941,78) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1941,83) wavefunction::in2(const wavefunction *, int, int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(1936,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at Cartesian2D.cpp(1938,6)
   <Peeled loop for vectorization>
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1938,6)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1938,6)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::Open_File(std::ofstream &, std::string *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Open_File(std::ofstream &, std::string *)) [311] Cartesian2D.cpp(1956,4)
  -> INLINE: (1957,15) std::basic_ofstream<char, std::char_traits<char>>::open(std::basic_ofstream<char, std::char_traits<char>> *, const char *, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1957,25) std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)
  -> INLINE: (1957,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::c_str(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1958,15) std::ios_base::setf(std::ios_base *, std::ios_base::fmtflags)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1958,34) std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)

===========================================================================

Begin optimization report for: Cartesian_2D::Psi_edge(wavefunction *, double, double, double, double, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Psi_edge(wavefunction *, double, double, double, double, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &)) [312] Cartesian2D.cpp(1962,161)
  -> INLINE: (1969,11) std::abs(double)
  -> INLINE: (1969,20) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1970,20) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1970,37) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1970,41) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1971,19) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1971,36) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1971,40) wavefunction::in2(const wavefunction *, int, int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(1968,6)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::TSURFF(wavefunction *, double, double, double, double, std::vector<double, std::allocator<double>> *, int, std::vector<double, std::allocator<double>> *, double, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::TSURFF(wavefunction *, double, double, double, double, std::vector<double, std::allocator<double>> *, int, std::vector<double, std::allocator<double>> *, double, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &)) [313] Cartesian2D.cpp(1979,230)
  -> (1987,31) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::~vector(std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *)
  -> (1987,31) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::vector(std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *)
  -> (1987,42) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::~vector(std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *)
  -> (1987,42) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::vector(std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *)
  -> INLINE: (1988,16) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::resize(std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::value_type *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1988,16) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1988,23) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> (1988,23) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> INLINE: (1989,41) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::operator[](std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type)
  -> INLINE: (1989,45) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::resize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1989,52) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (1990,15) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::resize(std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::value_type *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1990,15) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1990,22) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> (1990,22) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> INLINE: (1991,40) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::operator[](std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type)
  -> INLINE: (1991,44) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::resize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1991,51) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (1994,19) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::operator[](std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type)
  -> INLINE: (1994,32) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1994,45) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1994,49) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1995,18) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::operator[](std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type)
  -> INLINE: (1995,31) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1995,44) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1995,48) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1996,19) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::operator[](std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type)
  -> INLINE: (1996,32) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1996,45) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1996,49) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1997,18) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::operator[](std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type)
  -> INLINE: (1997,31) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1997,44) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1997,48) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1998,19) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::operator[](std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type)
  -> INLINE: (1998,32) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1998,45) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1998,49) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1999,18) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::operator[](std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type)
  -> INLINE: (1999,31) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1999,44) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1999,48) wavefunction::in2(const wavefunction *, int, int) const
  -> DELETED: (2026,22) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> DELETED: (2026,32) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (2026,32) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (2026,32) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (2026,32) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> (2026,32) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (2026,39) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> DELETED: (2026,48) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (2026,48) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (2026,48) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (2026,48) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> (2026,48) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (2026,55) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> DELETED: (2026,65) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (2026,65) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (2026,65) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (2026,65) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> (2026,65) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (2026,72) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (2026,81) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (2026,81) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> (2026,81) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> DELETED: (2026,81) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (2031,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2031,36) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::operator[](std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type)
  -> INLINE: (2031,41) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2031,59) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::operator[](std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type)
  -> INLINE: (2031,64) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2031,64) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2031,64) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2031,79) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::operator[](std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type)
  -> INLINE: (2031,84) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2031,84) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2031,89) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2032,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2032,34) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::operator[](std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type)
  -> INLINE: (2032,39) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2032,56) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::operator[](std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type)
  -> INLINE: (2032,61) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2032,61) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2032,61) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2032,75) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::operator[](std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type)
  -> INLINE: (2032,80) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2032,80) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2032,85) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2033,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2033,36) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::operator[](std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type)
  -> INLINE: (2033,41) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2033,56) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::operator[](std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type)
  -> INLINE: (2033,61) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2033,61) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2033,66) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2034,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2034,34) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::operator[](std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type)
  -> INLINE: (2034,39) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2034,53) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::operator[](std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *, std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::size_type)
  -> INLINE: (2034,58) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2034,58) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2034,63) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2042,6) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::~vector(std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2042,6) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2042,6) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2042,6) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2042,6) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2042,6) std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::~vector(std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2043,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2043,33) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (2044,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2044,32) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (2046,15) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2046,19) std::complex<double>::operator+=<double>(std::complex<double> *, const std::complex<double> &)
  -> INLINE: (2046,44) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2046,44) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2046,44) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2046,44) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2046,54) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2046,57) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2046,57) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2046,66) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2046,66) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2046,66) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2046,66) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2046,92) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2046,92) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2046,98) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2046,114) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2046,114) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2046,114) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2046,114) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2047,14) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2047,18) std::complex<double>::operator+=<double>(std::complex<double> *, const std::complex<double> &)
  -> INLINE: (2047,43) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2047,43) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2047,43) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2047,43) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2047,53) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2047,56) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2047,56) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2047,65) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2047,65) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2047,65) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2047,65) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2047,89) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2047,89) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2047,95) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2047,110) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2047,110) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2047,110) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2047,110) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_construct.h(99,4) inlined into Cartesian2D.cpp(1988,16)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at Cartesian2D.cpp(1989,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.4.7/bits/stl_vector.h(851,9) ]
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at Cartesian2D.cpp(1989,6)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_construct.h(99,4) inlined into Cartesian2D.cpp(1990,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at Cartesian2D.cpp(1991,6)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.4.7/bits/stl_vector.h(851,9) ]
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at Cartesian2D.cpp(1991,6)
<Remainder>
LOOP END

LOOP BEGIN at Cartesian2D.cpp(1993,6)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 1994 and  line 1998
LOOP END

LOOP BEGIN at Cartesian2D.cpp(2030,6)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at Cartesian2D.cpp(2030,6)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at Cartesian2D.cpp(2030,6)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at Cartesian2D.cpp(2042,6)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 1172 and  line 205

   LOOP BEGIN at Cartesian2D.cpp(2045,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between  line 743 and  line 205
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_construct.h(99,4) inlined into Cartesian2D.cpp(2042,6)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_construct.h(99,4) inlined into Cartesian2D.cpp(2042,6)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

    Report from: Code generation optimizations [cg]

/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(305,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(305,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(305,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(305,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(305,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(305,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(305,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(305,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(305,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(305,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(305,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(305,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(305,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(305,31):remark #34048: consider using complex-limited-range option to boost run time performance.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(305,31):remark #34046: complex divide implemented using x87 instructions to maintain precision.
/share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(305,31):remark #34048: consider using complex-limited-range option to boost run time performance.
Cartesian2D.cpp(2043,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
Cartesian2D.cpp(2044,17):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
===========================================================================

Begin optimization report for: std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>>::~vector(std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double>>>, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double>>>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_construct.h(99,4) inlined into /usr/include/c++/4.4.7/bits/stl_vector.h(314,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 132 and  line 95
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::TSURFF_PRJ(wavefunction *, wavefunction *, double, double, double, std::vector<double, std::allocator<double>> *, int, std::vector<double, std::allocator<double>> *, double, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::TSURFF_PRJ(wavefunction *, wavefunction *, double, double, double, std::vector<double, std::allocator<double>> *, int, std::vector<double, std::allocator<double>> *, double, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &)) [318] Cartesian2D.cpp(2056,242)
  -> DELETED: (2061,22) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (2061,32) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (2061,32) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (2061,32) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> DELETED: (2061,32) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (2061,32) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (2061,36) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (2061,45) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> DELETED: (2061,45) std::allocator<std::complex<double>>::~allocator(std::allocator<std::complex<double>> *)
  -> (2061,45) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type &, const std::vector<std::complex<double>, std::allocator<std::complex<double>>>::allocator_type &)
  -> DELETED: (2061,45) std::allocator<std::complex<double>>::allocator(std::allocator<std::complex<double>> *)
  -> INLINE: (2061,45) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (2065,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2065,32) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (2066,16) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2066,31) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (2068,20) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2068,24) std::complex<double>::operator+=<double>(std::complex<double> *, const std::complex<double> &)
  -> INLINE: (2068,43) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2068,43) std::conj(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2068,51) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (2068,71) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2068,71) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2068,75) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (2069,19) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2069,23) std::complex<double>::operator+=<double>(std::complex<double> *, const std::complex<double> &)
  -> INLINE: (2069,42) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2069,42) std::conj(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2069,50) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (2069,70) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2069,70) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2069,74) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (2071,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2071,21) std::complex<double>::operator*=(std::complex<double> *, double)
  -> INLINE: (2072,16) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2072,20) std::complex<double>::operator*=(std::complex<double> *, double)
  -> INLINE: (2080,36) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2080,54) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2080,54) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2080,54) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2080,69) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2080,69) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2080,74) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2081,34) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2081,51) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2081,51) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2081,51) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2081,65) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2081,65) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2081,70) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2082,36) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2082,51) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2082,51) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2082,56) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2083,34) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2083,48) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2083,48) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2083,53) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2084,26) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2084,38) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2084,45) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2084,45) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2085,26) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2085,37) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2085,44) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2085,44) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2087,9) std::norm<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2087,33) std::norm<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2087,59) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2087,82) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (2092,5) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2092,5) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2093,39) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2093,39) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2093,39) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2094,27) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2094,30) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2094,30) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2094,39) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2094,39) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2094,39) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2095,27) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2095,30) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2095,30) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2095,39) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2095,39) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2095,39) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2096,16) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2096,26) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2096,32) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2096,39) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2097,15) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2097,25) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2097,31) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2097,38) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2098,10) std::norm<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2098,34) std::norm<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2098,72) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> INLINE: (2098,75) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (2098,78) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, char)
  -> (2098,90) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, char)
  -> (2098,103) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, char)
  -> (2098,116) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, char)
  -> (2098,129) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, char)
  -> (2098,142) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(2068,64)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 1172 and  line 1236

   LOOP BEGIN at Cartesian2D.cpp(2067,8)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 2  
   LOOP END
LOOP END

LOOP BEGIN at Cartesian2D.cpp(2092,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ Cartesian2D.cpp(2098,72) ]
LOOP END

    Report from: Code generation optimizations [cg]

Cartesian2D.cpp(2065,17):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
Cartesian2D.cpp(2066,16):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
===========================================================================

Begin optimization report for: Cartesian_2D::TSURFF_1D(wavefunction *, double, double, std::vector<double, std::allocator<double>> *, int, std::vector<double, std::allocator<double>> *, double, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::TSURFF_1D(wavefunction *, double, double, std::vector<double, std::allocator<double>> *, int, std::vector<double, std::allocator<double>> *, double, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &, std::vector<std::complex<double>, std::allocator<std::complex<double>>> &)) [322] Cartesian2D.cpp(2108,193)
  -> (2113,22) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> (2113,22) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> (2113,33) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> (2113,33) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
  -> INLINE: (2114,16) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::resize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2114,23) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (2115,15) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::resize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2115,22) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (2117,15) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2117,28) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2117,32) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (2118,14) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2118,27) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2118,31) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (2119,15) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2119,28) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2119,32) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (2120,14) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2120,27) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2120,31) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (2121,15) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2121,28) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2121,32) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (2122,14) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2122,27) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2122,31) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (2127,18) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2127,33) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (2128,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2128,32) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (2132,35) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2132,53) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2132,53) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2132,53) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2132,68) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2132,68) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2132,73) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2133,33) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2133,50) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2133,50) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2133,50) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2133,64) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2133,64) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2133,69) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2134,35) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2134,50) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2134,50) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2134,55) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2135,33) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2135,47) std::operator-(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2135,47) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2135,52) std::operator/(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2137,17) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2137,21) std::complex<double>::operator+=<double>(std::complex<double> *, const std::complex<double> &)
  -> INLINE: (2137,46) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2137,46) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2137,46) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2137,46) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2137,56) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2137,59) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2137,59) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2137,68) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2137,68) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2137,68) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2137,68) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2137,85) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2137,97) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2137,104) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2137,104) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2137,104) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2138,16) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2138,20) std::complex<double>::operator+=<double>(std::complex<double> *, const std::complex<double> &)
  -> INLINE: (2138,45) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2138,45) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2138,45) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2138,45) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2138,55) std::operator-(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2138,58) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2138,58) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2138,67) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2138,67) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2138,67) std::exp<double>(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2138,67) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2138,83) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2138,94) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2138,101) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2138,101) std::operator+(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2138,101) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2139,5) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2139,5) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::~vector(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(2114,16)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(2114,16)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(545,4) inlined into Cartesian2D.cpp(2114,16)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 546 and  line 546
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(545,4) inlined into Cartesian2D.cpp(2114,16)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(690,7) inlined into Cartesian2D.cpp(2114,16)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.4.7/bits/stl_algobase.h(691,3) ]
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(690,7) inlined into Cartesian2D.cpp(2114,16)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into Cartesian2D.cpp(2114,16)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.4.7/bits/stl_construct.h(80,7) ]
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into Cartesian2D.cpp(2114,16)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into Cartesian2D.cpp(2114,16)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.4.7/bits/stl_construct.h(80,7) ]
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(185,8) inlined into Cartesian2D.cpp(2114,16)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(2114,16)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(2114,16)
<Remainder>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(2114,16)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 80 and  line 80
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_uninitialized.h(73,8) inlined into Cartesian2D.cpp(2114,16)
<Remainder>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at Cartesian2D.cpp(2126,6)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 1172 and  line 2128
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at Cartesian2D.cpp(2126,6)
<Remainder>
LOOP END

LOOP BEGIN at Cartesian2D.cpp(2136,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 743 and  line 205
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.4.7/bits/stl_construct.h(80,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.4.7/bits/stl_construct.h(80,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.4.7/bits/stl_construct.h(80,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
Cartesian2D.cpp(2127,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
Cartesian2D.cpp(2128,17):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
Cartesian2D.cpp(2127,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
Cartesian2D.cpp(2128,17):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
Cartesian2D.cpp(2127,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
Cartesian2D.cpp(2128,17):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.4.7/bits/stl_construct.h(80,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.4.7/bits/stl_construct.h(80,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.4.7/bits/stl_construct.h(80,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
===========================================================================

Begin optimization report for: Cartesian_2D::Obs_dipole(wavefunction *, std::complex<double> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Obs_dipole(wavefunction *, std::complex<double> &)) [323] Cartesian2D.cpp(2146,2)
  -> INLINE: (2147,34) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (2153,9) std::complex<double>::operator-=<double>(std::complex<double> *, const std::complex<double> &)
  -> INLINE: (2153,24) std::conj(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2153,24) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2153,29) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (2153,43) std::operator*(const std::complex<double> &, const double &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2153,50) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2153,63) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2154,15) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2154,15) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2154,20) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (2158,7) std::complex<double>::operator*=(std::complex<double> *, double)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(2149,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 212 and  line 212

   LOOP BEGIN at Cartesian2D.cpp(2151,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between  line 212 and  line 212
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

Cartesian2D.cpp(2147,23):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
===========================================================================

Begin optimization report for: Cartesian_2D::Obs_dipole_gex(wavefunction *, wavefunction *, std::complex<double> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Obs_dipole_gex(wavefunction *, wavefunction *, std::complex<double> &)) [324] Cartesian2D.cpp(2164,9)
  -> INLINE: (2165,34) std::complex<double>::complex(std::complex<double> *, double, double)
  -> (2169,17) Cartesian_2D::ProjectOUT_Diff_Sizes(wavefunction &, wavefunction &)
  -> INLINE: (2175,37) std::complex<double>::operator-=<double>(std::complex<double> *, const std::complex<double> &)
  -> INLINE: (2175,53) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2175,72) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2176,55) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2176,55) std::conj(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2176,55) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2176,59) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (2176,107) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (2176,107) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2176,118) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (2180,21) std::complex<double>::operator*=(std::complex<double> *, double)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(2171,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 212 and  line 212

   LOOP BEGIN at Cartesian2D.cpp(2173,25)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between  line 212 and  line 212
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

Cartesian2D.cpp(2165,23):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
===========================================================================

Begin optimization report for: Cartesian_2D::ProjectOUT_Diff_Sizes(wavefunction &, wavefunction &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::ProjectOUT_Diff_Sizes(wavefunction &, wavefunction &)) [325] Cartesian2D.cpp(1799,2)
  -> INLINE: (1819,33) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (1825,15) std::complex<double>::operator+=<double>(std::complex<double> *, const std::complex<double> &)
  -> INLINE: (1825,36) std::conj(const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1825,36) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1825,46) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1826,14) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1826,14) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1826,18) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1828,13) std::complex<double>::operator*=(std::complex<double> *, double)
  -> INLINE: (1834,12) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1834,16) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1834,47) std::complex<double>::operator-=<double>(std::complex<double> *, const std::complex<double> &)
  -> INLINE: (1834,73) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1834,73) std::operator*(const std::complex<double> &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1834,83) wavefunction::in2(const wavefunction *, int, int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(1822,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at Cartesian2D.cpp(1823,4)
   <Peeled loop for vectorization>
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1823,4)
      remark #25084: Preprocess Loopnests: Moving Out Store    [ /share/pkg/intel/2016/install/compilers_and_libraries_2016.1.150/linux/compiler/include/complex(205,9) ]
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1823,4)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END

LOOP BEGIN at Cartesian2D.cpp(1831,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at Cartesian2D.cpp(1832,4)
   <Peeled loop for vectorization, Multiversioned v1>
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1832,4)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1832,4)
   <Remainder loop for vectorization, Multiversioned v1>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1832,4)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 4  
   LOOP END

   LOOP BEGIN at Cartesian2D.cpp(1832,4)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::length_to_velocity(wavefunction *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::length_to_velocity(wavefunction *)) [326] Cartesian2D.cpp(2186,43)

===========================================================================

Begin optimization report for: __sti__$E()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__sti__$E()) [327] <compiler generated>
  -> INLINE: /usr/include/c++/4.4.7/iostream:(72,25) __sti__I()
    -> INLINE: ../include/constant.h:(13,38) std::complex<double>::complex(std::complex<double> *, double, double)

===========================================================================

Begin optimization report for: __sti__I()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti__I()) <compiler generated>

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::_M_fill_insert(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::iterator, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::value_type &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(701,7) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(393,5)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(701,7) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(393,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(701,7) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(393,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(757,7) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(398,5)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(757,7) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(398,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(757,7) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(398,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(701,7) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(407,5)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(701,7) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(407,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(701,7) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(407,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(757,7) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(420,5)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(757,7) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(420,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(757,7) inlined into /usr/include/c++/4.4.7/bits/vector.tcc(420,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.4.7/bits/stl_algobase.h(378,4):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.4.7/bits/stl_algobase.h(575,4):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.4.7/bits/stl_algobase.h(378,4):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.4.7/bits/stl_algobase.h(378,4):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.4.7/bits/stl_algobase.h(378,4):remark #34026: call to memmove implemented as a call to optimized library version
===========================================================================

Begin optimization report for: Cartesian_2D::Interact_Init_Wave(wavefunction &, wavefunction *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Interact_Init_Wave(wavefunction &, wavefunction *)) [337] Cartesian2D.cpp(1082,66)
  -> INLINE: (1088,12) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1088,16) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1088,26) std::complex<double>::operator=(std::complex<double> *, double)
  -> INLINE: (1115,12) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1115,16) wavefunction::in2(const wavefunction *, int, int) const
  -> INLINE: (1115,58) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1115,68) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1115,81) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::operator[](std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type)
  -> INLINE: (1115,81) std::operator*(const double &, const std::complex<double> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1115,86) wavefunction::in2(const wavefunction *, int, int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at Cartesian2D.cpp(1084,6)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at Cartesian2D.cpp(1086,2)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 2  
   LOOP END
LOOP END

LOOP BEGIN at Cartesian2D.cpp(1111,6)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at Cartesian2D.cpp(1113,2)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::Initialize_Momentum(wavefunction &, wavefunction &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Initialize_Momentum(wavefunction &, wavefunction &)) [338] Cartesian2D.cpp(971,2)
  -> DELETED: (989,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (989,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (989,13) Axis::Init(Axis *, std::string *, int, double, AxisType)
    -> INLINE: ../include/wavefunction.h:(57,10) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/wavefunction.h:(72,11) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, std::vector<double, std::allocator<double>>::value_type)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/wavefunction.h:(80,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(88,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(97,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(100,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(109,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> ../include/wavefunction.h:(119,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> ../include/wavefunction.h:(119,42) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, char)
    -> ../include/wavefunction.h:(119,59) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
    -> INLINE: ../include/wavefunction.h:(122,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(130,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(133,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (989,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (989,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> DELETED: (989,18) std::allocator<char>::allocator(std::allocator<char> *)
  -> DELETED: (990,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (990,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (990,13) Axis::Init(Axis *, std::string *, int, double, AxisType)
    -> INLINE: ../include/wavefunction.h:(57,10) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/wavefunction.h:(72,11) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, std::vector<double, std::allocator<double>>::value_type)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/wavefunction.h:(80,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(88,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(97,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(100,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(109,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> ../include/wavefunction.h:(119,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> ../include/wavefunction.h:(119,42) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, char)
    -> ../include/wavefunction.h:(119,59) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
    -> INLINE: ../include/wavefunction.h:(122,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(130,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(133,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (990,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (990,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> DELETED: (990,18) std::allocator<char>::allocator(std::allocator<char> *)
  -> DELETED: (991,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (991,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (991,13) Axis::Init(Axis *, std::string *, int, double, AxisType)
    -> INLINE: ../include/wavefunction.h:(57,10) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/wavefunction.h:(72,11) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, std::vector<double, std::allocator<double>>::value_type)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/wavefunction.h:(80,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(88,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(97,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(100,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(109,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> ../include/wavefunction.h:(119,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> ../include/wavefunction.h:(119,42) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, char)
    -> ../include/wavefunction.h:(119,59) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
    -> INLINE: ../include/wavefunction.h:(122,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(130,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(133,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (991,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (991,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> DELETED: (991,18) std::allocator<char>::allocator(std::allocator<char> *)
  -> INLINE: (997,15) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::resize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (997,55) std::complex<double>::complex(std::complex<double> *, double, double)
  -> INLINE: (1003,13) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, std::vector<double, std::allocator<double>>::value_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1004,13) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, std::vector<double, std::allocator<double>>::value_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1005,13) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, std::vector<double, std::allocator<double>>::value_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1023,13) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1027,13) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1031,13) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1035,13) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(989,13)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(989,13)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(989,13)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(989,13)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(989,13)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(989,13)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(989,13)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(989,13)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(989,13)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(989,13)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(989,13)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(989,13)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(989,13)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(989,13)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(989,13)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(989,13)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(989,13)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(989,13)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(989,13)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(989,13)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(96,9) inlined into Cartesian2D.cpp(989,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 97 and  line 97
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(96,9) inlined into Cartesian2D.cpp(989,13)
<Remainder>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(99,9) inlined into Cartesian2D.cpp(989,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 100 and  line 100
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(99,9) inlined into Cartesian2D.cpp(989,13)
<Remainder>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(989,13)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(989,13)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(989,13)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(989,13)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(989,13)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(989,13)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(989,13)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(989,13)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(989,13)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(989,13)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(990,13)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(990,13)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(990,13)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(990,13)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(990,13)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(990,13)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(990,13)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(990,13)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(990,13)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(990,13)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(990,13)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(990,13)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(990,13)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(990,13)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(990,13)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(990,13)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(990,13)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(990,13)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(990,13)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(990,13)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(96,9) inlined into Cartesian2D.cpp(990,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 97 and  line 97
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(96,9) inlined into Cartesian2D.cpp(990,13)
<Remainder>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(99,9) inlined into Cartesian2D.cpp(990,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 100 and  line 100
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(99,9) inlined into Cartesian2D.cpp(990,13)
<Remainder>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(990,13)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(990,13)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(990,13)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(990,13)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(990,13)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(990,13)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(990,13)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(990,13)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(990,13)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(990,13)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(991,13)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(991,13)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(991,13)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(991,13)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(991,13)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(991,13)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(991,13)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(991,13)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(991,13)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(991,13)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(991,13)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(991,13)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(991,13)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(991,13)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(991,13)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(991,13)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(991,13)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(991,13)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(991,13)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(991,13)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(96,9) inlined into Cartesian2D.cpp(991,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 97 and  line 97
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(96,9) inlined into Cartesian2D.cpp(991,13)
<Remainder>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(99,9) inlined into Cartesian2D.cpp(991,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 100 and  line 100
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(99,9) inlined into Cartesian2D.cpp(991,13)
<Remainder>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(991,13)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(991,13)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(991,13)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(991,13)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(991,13)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(991,13)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(991,13)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(991,13)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(991,13)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(991,13)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at Cartesian2D.cpp(1021,3)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at Cartesian2D.cpp(1025,3)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at Cartesian2D.cpp(1029,3)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at Cartesian2D.cpp(1033,3)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::Initialize(wavefunction &, std::vector<int, std::allocator<int>> *, std::vector<double, std::allocator<double>> *, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Initialize(wavefunction &, std::vector<int, std::allocator<int>> *, std::vector<double, std::allocator<double>> *, int, int)) [339] Cartesian2D.cpp(926,2)
  -> INLINE: (934,33) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (935,33) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (941,11) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::resize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (941,43) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (951,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> (951,9) Axis::Init(Axis *, std::string *, int, double, AxisType)
  -> INLINE: (951,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (951,14) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (951,14) std::allocator<char>::~allocator(std::allocator<char> *)
  -> DELETED: (951,14) std::allocator<char>::allocator(std::allocator<char> *)
  -> INLINE: (951,28) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (951,46) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> DELETED: (952,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (952,9) Axis::Init(Axis *, std::string *, int, double, AxisType)
    -> INLINE: ../include/wavefunction.h:(57,10) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/wavefunction.h:(72,11) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, std::vector<double, std::allocator<double>>::value_type)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/wavefunction.h:(80,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(88,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(97,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(100,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(109,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> ../include/wavefunction.h:(119,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> ../include/wavefunction.h:(119,42) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, char)
    -> ../include/wavefunction.h:(119,59) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
    -> INLINE: ../include/wavefunction.h:(122,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(130,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(133,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (952,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (952,14) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (952,14) std::allocator<char>::~allocator(std::allocator<char> *)
  -> DELETED: (952,14) std::allocator<char>::allocator(std::allocator<char> *)
  -> INLINE: (952,28) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (952,46) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> DELETED: (955,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (955,9) Axis::Init(Axis *, std::string *, int, double, AxisType)
    -> INLINE: ../include/wavefunction.h:(57,10) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/wavefunction.h:(72,11) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, std::vector<double, std::allocator<double>>::value_type)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/wavefunction.h:(80,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(88,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(97,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(100,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(109,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> ../include/wavefunction.h:(119,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> ../include/wavefunction.h:(119,42) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, char)
    -> ../include/wavefunction.h:(119,59) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
    -> INLINE: ../include/wavefunction.h:(122,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(130,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(133,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (955,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (955,14) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (955,14) std::allocator<char>::~allocator(std::allocator<char> *)
  -> DELETED: (955,14) std::allocator<char>::allocator(std::allocator<char> *)
  -> INLINE: (955,30) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> DELETED: (956,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (956,9) Axis::Init(Axis *, std::string *, int, double, AxisType)
    -> INLINE: ../include/wavefunction.h:(57,10) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/wavefunction.h:(72,11) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, std::vector<double, std::allocator<double>>::value_type)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/wavefunction.h:(80,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(88,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(97,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(100,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(109,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> ../include/wavefunction.h:(119,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> ../include/wavefunction.h:(119,42) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, char)
    -> ../include/wavefunction.h:(119,59) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
    -> INLINE: ../include/wavefunction.h:(122,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(130,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(133,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (956,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (956,14) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (956,14) std::allocator<char>::~allocator(std::allocator<char> *)
  -> DELETED: (956,14) std::allocator<char>::allocator(std::allocator<char> *)
  -> INLINE: (956,30) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(952,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(952,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(952,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(952,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(952,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(952,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(952,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(952,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(952,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(952,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(952,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(952,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(952,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(952,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(952,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(952,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(952,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(952,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(952,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(952,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(96,9) inlined into Cartesian2D.cpp(952,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 97 and  line 97
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(96,9) inlined into Cartesian2D.cpp(952,9)
<Remainder>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(99,9) inlined into Cartesian2D.cpp(952,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 100 and  line 100
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(99,9) inlined into Cartesian2D.cpp(952,9)
<Remainder>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(952,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(952,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(952,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(952,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(952,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(952,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(952,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(952,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(952,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(952,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(955,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(955,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(955,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(955,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(955,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(955,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(955,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(955,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(955,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(955,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(955,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(955,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(955,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(955,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(955,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(955,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(955,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(955,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(955,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(955,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(96,9) inlined into Cartesian2D.cpp(955,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 97 and  line 97
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(96,9) inlined into Cartesian2D.cpp(955,9)
<Remainder>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(99,9) inlined into Cartesian2D.cpp(955,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 100 and  line 100
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(99,9) inlined into Cartesian2D.cpp(955,9)
<Remainder>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(955,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(955,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(955,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(955,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(955,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(955,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(955,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(955,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(955,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(955,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(956,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(956,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(956,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(956,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(956,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(956,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(956,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(956,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(956,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(956,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(956,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(956,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(956,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(956,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(956,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(956,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(956,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(956,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(956,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(956,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(96,9) inlined into Cartesian2D.cpp(956,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 97 and  line 97
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(96,9) inlined into Cartesian2D.cpp(956,9)
<Remainder>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(99,9) inlined into Cartesian2D.cpp(956,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 100 and  line 100
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(99,9) inlined into Cartesian2D.cpp(956,9)
<Remainder>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(956,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(956,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(956,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(956,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(956,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(956,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(956,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(956,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(956,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(956,9)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: Cartesian_2D::Initialize_part(wavefunction &, std::vector<int, std::allocator<int>> *, std::vector<double, std::allocator<double>> *, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Cartesian_2D::Initialize_part(wavefunction &, std::vector<int, std::allocator<int>> *, std::vector<double, std::allocator<double>> *, int, int)) [340] Cartesian2D.cpp(884,2)
  -> INLINE: (892,33) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (893,33) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (898,11) std::vector<std::complex<double>, std::allocator<std::complex<double>>>::resize(std::vector<std::complex<double>, std::allocator<std::complex<double>>> *, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::size_type, std::vector<std::complex<double>, std::allocator<std::complex<double>>>::value_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (898,43) std::complex<double>::complex(std::complex<double> *, double, double)
  -> DELETED: (907,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> (907,9) Axis::Init(Axis *, std::string *, int, double, AxisType)
  -> INLINE: (907,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (907,14) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (907,14) std::allocator<char>::~allocator(std::allocator<char> *)
  -> DELETED: (907,14) std::allocator<char>::allocator(std::allocator<char> *)
  -> INLINE: (907,28) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (907,46) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> DELETED: (908,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (908,9) Axis::Init(Axis *, std::string *, int, double, AxisType)
    -> INLINE: ../include/wavefunction.h:(57,10) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/wavefunction.h:(72,11) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, std::vector<double, std::allocator<double>>::value_type)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/wavefunction.h:(80,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(88,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(97,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(100,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(109,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> ../include/wavefunction.h:(119,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> ../include/wavefunction.h:(119,42) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, char)
    -> ../include/wavefunction.h:(119,59) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
    -> INLINE: ../include/wavefunction.h:(122,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(130,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(133,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (908,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (908,14) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (908,14) std::allocator<char>::~allocator(std::allocator<char> *)
  -> DELETED: (908,14) std::allocator<char>::allocator(std::allocator<char> *)
  -> INLINE: (908,28) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (908,46) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> DELETED: (911,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (911,9) Axis::Init(Axis *, std::string *, int, double, AxisType)
    -> INLINE: ../include/wavefunction.h:(57,10) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/wavefunction.h:(72,11) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, std::vector<double, std::allocator<double>>::value_type)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/wavefunction.h:(80,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(88,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(97,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(100,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(109,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> ../include/wavefunction.h:(119,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> ../include/wavefunction.h:(119,42) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, char)
    -> ../include/wavefunction.h:(119,59) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
    -> INLINE: ../include/wavefunction.h:(122,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(130,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(133,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (911,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (911,14) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (911,14) std::allocator<char>::~allocator(std::allocator<char> *)
  -> DELETED: (911,14) std::allocator<char>::allocator(std::allocator<char> *)
  -> INLINE: (911,30) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> DELETED: (912,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (912,9) Axis::Init(Axis *, std::string *, int, double, AxisType)
    -> INLINE: ../include/wavefunction.h:(57,10) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/wavefunction.h:(72,11) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, std::vector<double, std::allocator<double>>::value_type)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: ../include/wavefunction.h:(80,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(88,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(97,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(100,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(109,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> ../include/wavefunction.h:(119,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> ../include/wavefunction.h:(119,42) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, char)
    -> ../include/wavefunction.h:(119,59) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
    -> INLINE: ../include/wavefunction.h:(122,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(130,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: ../include/wavefunction.h:(133,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (912,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (912,14) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (912,14) std::allocator<char>::~allocator(std::allocator<char> *)
  -> DELETED: (912,14) std::allocator<char>::allocator(std::allocator<char> *)
  -> INLINE: (912,30) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(908,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(908,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(908,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(908,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(908,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(908,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(908,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(908,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(908,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(908,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(908,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(908,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(908,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(908,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(908,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(908,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(908,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(908,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(908,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(908,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(96,9) inlined into Cartesian2D.cpp(908,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 97 and  line 97
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(96,9) inlined into Cartesian2D.cpp(908,9)
<Remainder>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(99,9) inlined into Cartesian2D.cpp(908,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 100 and  line 100
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(99,9) inlined into Cartesian2D.cpp(908,9)
<Remainder>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(908,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(908,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(908,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(908,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(908,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(908,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(908,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(908,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(908,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(908,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(911,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(911,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(911,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(911,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(911,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(911,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(911,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(911,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(911,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(911,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(911,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(911,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(911,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(911,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(911,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(911,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(911,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(911,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(911,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(911,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(96,9) inlined into Cartesian2D.cpp(911,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 97 and  line 97
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(96,9) inlined into Cartesian2D.cpp(911,9)
<Remainder>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(99,9) inlined into Cartesian2D.cpp(911,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 100 and  line 100
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(99,9) inlined into Cartesian2D.cpp(911,9)
<Remainder>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(911,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(911,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(911,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(911,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(911,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(911,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(911,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(911,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(911,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(911,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(912,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(912,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(912,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(912,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9) inlined into Cartesian2D.cpp(912,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(912,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(912,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(912,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(912,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9) inlined into Cartesian2D.cpp(912,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(912,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(912,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(912,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(912,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9) inlined into Cartesian2D.cpp(912,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(912,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(912,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(912,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(912,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9) inlined into Cartesian2D.cpp(912,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(96,9) inlined into Cartesian2D.cpp(912,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 97 and  line 97
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(96,9) inlined into Cartesian2D.cpp(912,9)
<Remainder>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(99,9) inlined into Cartesian2D.cpp(912,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 100 and  line 100
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(99,9) inlined into Cartesian2D.cpp(912,9)
<Remainder>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(912,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(912,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(912,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(912,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9) inlined into Cartesian2D.cpp(912,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(912,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(912,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(912,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(912,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9) inlined into Cartesian2D.cpp(912,9)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: Axis::Init(Axis *, std::string *, int, double, AxisType)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Axis::Init(Axis *, std::string *, int, double, AxisType)) [368] ../include/wavefunction.h(55,84)
  -> INLINE: (57,10) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (72,11) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, std::vector<double, std::allocator<double>>::value_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (80,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (88,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (97,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (100,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (109,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (119,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (119,42) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, char)
  -> (119,59) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (122,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (130,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (133,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(701,7) inlined into ../include/wavefunction.h(73,11)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(701,7) inlined into ../include/wavefunction.h(73,11)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(701,7) inlined into ../include/wavefunction.h(73,11)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(757,7) inlined into ../include/wavefunction.h(73,11)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(757,7) inlined into ../include/wavefunction.h(73,11)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(757,7) inlined into ../include/wavefunction.h(73,11)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(757,7) inlined into ../include/wavefunction.h(73,11)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(757,7) inlined into ../include/wavefunction.h(73,11)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(757,7) inlined into ../include/wavefunction.h(73,11)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(129,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(132,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(120,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(108,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(96,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 97 and  line 97
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(96,9)
<Remainder>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(99,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 100 and  line 100
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(99,9)
<Remainder>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(87,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../include/wavefunction.h(79,9)
<Remainder, Multiversioned v2>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.4.7/bits/stl_algobase.h(758,3):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.4.7/bits/stl_algobase.h(378,4):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.4.7/bits/stl_algobase.h(758,3):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.4.7/bits/stl_algobase.h(378,4):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.4.7/bits/stl_algobase.h(378,4):remark #34026: call to memmove implemented as a call to optimized library version
===========================================================================
